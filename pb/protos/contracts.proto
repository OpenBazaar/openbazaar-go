syntax = "proto3";
option go_package = "pb";


import "countrycodes.proto";
import "google/protobuf/timestamp.proto";

message RicardianContract {
    repeated Listing vendorListings                    = 1;
    Order buyerOrder                                   = 2;
    OrderConfirmation vendorOrderConfirmation          = 3;
    repeated OrderFulfillment vendorOrderFulfillment   = 4;
    OrderCompletion buyerOrderCompletion               = 5;
    Dispute dispute                                    = 6;
    DisputeResolution disputeResolution                = 7;
    DisputeAcceptance disputeAcceptance                = 8;
    Refund refund                                      = 9;
    repeated Signature signatures                      = 10;
    repeated string errors                             = 11;
}

message Listing {
    string slug                             = 1;
    ID vendorID                             = 2;
    Metadata metadata                       = 3;
    Item item                               = 4;
    repeated ShippingOption shippingOptions = 5;
    repeated Tax taxes                      = 6;
    repeated Coupon coupons                 = 7;
    repeated string moderators              = 8;
    string termsAndConditions               = 9;
    string refundPolicy                     = 10;

    message Metadata {
        uint32 version                     = 1;
        ContractType contractType          = 2;
        Format format                      = 3;
        google.protobuf.Timestamp expiry   = 4;
        repeated string acceptedCurrencies = 5;
        string pricingCurrency             = 6;
        string language                    = 7;
        uint32 escrowTimeoutHours          = 8;
        string coinType                    = 9;
        uint32 coinDivisibility            = 10;
        float priceModifier                = 11;

        enum ContractType {
            PHYSICAL_GOOD  = 0;
            DIGITAL_GOOD   = 1;
            SERVICE        = 2;
            CROWD_FUND     = 3;
            CRYPTOCURRENCY = 4;
        }

        enum Format {
            FIXED_PRICE  = 0;
            MARKET_PRICE = 2;
        }
    }

    message Item {
        string title               = 1;
        string description         = 2;
        string processingTime      = 3;
        uint64 price               = 4;
        bool nsfw                  = 5;
        repeated string tags       = 6;
        repeated Image images      = 7;
        repeated string categories = 8;
        float grams                = 9;
        string condition           = 10;
        repeated Option options    = 11;
        repeated Sku skus          = 12;

        message Option {
            string name                = 1;
            string description         = 2;
            repeated Variant variants  = 3;

            message Variant {
                string name = 1;
                Image image = 2;
            }
        }

        message Sku {
            repeated uint32 variantCombo = 1;
            string productID             = 2;
            int64 surcharge              = 3;
            int64 quantity               = 4; // Not saved with listing
        }

        message Image {
            string filename = 1;
            string original = 2;
            string large    = 3;
            string medium   = 4;
            string small    = 5;
            string tiny     = 6;
        }
    }

    message ShippingOption {
        string name                         = 1;
        ShippingType type                   = 2;
        repeated CountryCode regions        = 3;
        repeated Service services           = 5;

        enum ShippingType {
            LOCAL_PICKUP = 0;
            FIXED_PRICE  = 1;
        }

        message Service {
            string name                = 1;
            uint64 price               = 2;
            string estimatedDelivery   = 3;
            uint64 additionalItemPrice = 4;
        }
    }

    message Tax {
        string taxType                  = 1;
        repeated CountryCode taxRegions = 2;
        bool taxShipping                = 3;
        float percentage                = 4;
    }

    message Coupon {
        string title = 1;
        oneof code {
            string hash         = 2;
            string discountCode = 3;
        }
        oneof discount {
            float percentDiscount = 5;
            uint64 priceDiscount  = 6;
        }
    }
}

message Order {
    string refundAddress                 = 1;
    uint64 refundFee                     = 2;
    Shipping shipping                    = 3;
    ID buyerID                           = 4;
    google.protobuf.Timestamp timestamp  = 5;
    repeated Item items                  = 6;
    Payment payment                      = 7;
    repeated bytes ratingKeys            = 8;
    string alternateContactInfo          = 9;
    uint32 version                       = 10;

    message Shipping {
        string shipTo       = 1;
        string address      = 2;
        string city         = 3;
        string state        = 4;
        string postalCode   = 5;
        CountryCode country = 6;
        string addressNotes = 7;
    }

    message Item {
        string listingHash            = 1;
        uint32 quantity               = 2; // order version < 2 used with listing version < 3
        uint64 quantity64             = 8; // order version >= 2 used with listing version >= 3
        repeated Option options       = 3;
        ShippingOption shippingOption = 4;
        string memo                   = 5;
        repeated string couponCodes   = 6;
        string paymentAddress         = 7;

        message Option {
            string name  = 1;
            string value = 2;
        }

        message ShippingOption {
            string name    = 1;
            string service = 2;
        }
    }

    message Payment {
        Method method       = 1;
        string moderator    = 2;
        uint64 amount       = 3; // Satoshis
        string chaincode    = 4; // Hex encoded
        string address      = 5; // B58check encoded
        string redeemScript = 6; // Hex encoded
        bytes  moderatorKey = 7;

        enum Method {
            ADDRESS_REQUEST = 0;
            DIRECT          = 1;
            MODERATED       = 2;
        }
    }
}

message OrderConfirmation {
    string orderID                            = 1;
    google.protobuf.Timestamp timestamp       = 2;
    // Direct payments only
    string paymentAddress                     = 3;
    uint64 requestedAmount                    = 4;

    repeated RatingSignature ratingSignatures = 5;
}

message OrderReject {
    string orderID                      = 1;
    google.protobuf.Timestamp timestamp = 2;
    repeated BitcoinSignature sigs      = 3;
}

message RatingSignature {
    TransactionMetadata metadata = 1;
    bytes signature              = 2;

    message TransactionMetadata {
        string listingSlug   = 1;
        bytes  ratingKey     = 2;
        bytes  moderatorKey  = 3; // Only if moderated
        string listingTitle  = 4;
        Image  thumbnail     = 5;

        message Image {
                string tiny     = 1;
                string small    = 2;
                string medium   = 3;
                string large    = 4;
                string original = 5;
        }
    }
}

message BitcoinSignature {
    uint32 inputIndex = 1;
    bytes signature   = 2;
}

message OrderFulfillment {
    string orderId                             = 1;

    string slug                                = 2;

    google.protobuf.Timestamp timestamp        = 3;

    // Physical goods only
    repeated PhysicalDelivery physicalDelivery = 4;

    //Digital goods only
    repeated DigitalDelivery digitalDelivery   = 5;

    // Moderated payments only
    Payout payout                              = 6;

    RatingSignature ratingSignature            = 7;

    string note                                = 8;

    // Cryptocurrencies only
    repeated CryptocurrencyDelivery cryptocurrencyDelivery = 9;

    message PhysicalDelivery {
        string shipper            = 1;
        string trackingNumber     = 2;
    }

    message DigitalDelivery {
        string url                = 1;
        string password           = 2;
    }

    message CryptocurrencyDelivery {
        string transactionID      = 1;
    }

    message Payout {
        repeated BitcoinSignature sigs = 1;
        string payoutAddress           = 2;
        uint64 payoutFeePerByte        = 3;
    }
}

message OrderCompletion {
    string orderId                       = 1;
    google.protobuf.Timestamp timestamp  = 2;
    repeated BitcoinSignature payoutSigs = 3;
    repeated Rating ratings              = 4;
}

message Rating {
    RatingData ratingData = 1;
    bytes signature       = 2;

    message RatingData {
        bytes ratingKey                     = 1;
        ID vendorID                         = 2;
        RatingSignature vendorSig           = 3;
        ID buyerID                          = 4; // optional
        string buyerName                    = 5; // optional
        bytes buyerSig                      = 6; // optional
        bytes moderatorSig                  = 7; // only if a dispute was won


        google.protobuf.Timestamp timestamp = 8;

        uint32 overall                      = 9;
        uint32 quality                      = 10;
        uint32 description                  = 11;
        uint32 deliverySpeed                = 12;
        uint32 customerService              = 13;
        string review                       = 14;
    }
}

message Dispute {
    google.protobuf.Timestamp timestamp = 1;
    string claim                        = 2;
    string payoutAddress                = 3;
    repeated Outpoint outpoints         = 4;
    bytes serializedContract            = 5;
}

message DisputeResolution {
    google.protobuf.Timestamp timestamp = 1;
    string orderId                      = 2;
    string proposedBy                   = 3;
    string resolution                   = 4;
    Payout payout                       = 5;
    repeated bytes moderatorRatingSigs  = 6; // Used in ratings

    message Payout {
            repeated BitcoinSignature sigs = 1;
            repeated Outpoint inputs       = 2;
            Output buyerOutput             = 3;
            Output vendorOutput            = 4;
            Output moderatorOutput         = 5;

            message Output {
                string script  = 1;
                uint64 amount  = 2;
            }
    }
}

message DisputeAcceptance {
    google.protobuf.Timestamp timestamp = 1;
    string closedBy                     = 2;
}

message Outpoint {
        string hash  = 1; // Hex encoded
        uint32 index = 2;
        uint64 value = 3;
}

message Refund {
    string orderID                      = 1;
    google.protobuf.Timestamp timestamp = 2;
    repeated BitcoinSignature sigs      = 3;
    TransactionInfo refundTransaction   = 4;
    string memo                         = 5;

    message TransactionInfo {
        string txid  = 1;
        uint64 value = 2;
    }
}

message VendorFinalizedPayment {
  string orderID = 1; // OrderID which has its funds released to the vendor
}

message ID {
    string peerID       = 1;
    string handle       = 2;
    Pubkeys pubkeys     = 3;
    bytes bitcoinSig    = 4; // Bitcoin signature covering peerID

    message Pubkeys {
        bytes identity = 1; // IPFS public key
        bytes bitcoin  = 2; // Bitcoin public key
    }
}

message Signature {
    Section section      = 1;
    bytes signatureBytes = 2;

    enum Section {
        LISTING            = 0;
        ORDER              = 1;
        ORDER_CONFIRMATION = 2;
        ORDER_FULFILLMENT  = 3;
        ORDER_COMPLETION   = 4;
        DISPUTE            = 5;
        DISPUTE_RESOLUTION = 6;
        REFUND             = 7;
    }
}

message SignedListing {
    Listing listing     = 1;
    string hash         = 2;
    bytes signature     = 3;
}
