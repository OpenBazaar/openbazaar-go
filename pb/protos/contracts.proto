syntax = "proto3";

import "countrycodes.proto";

message RicardianContract {
    repeated Listing vendorListings           = 1;
    Order buyerOrder                          = 2;
    OrderConfirmation vendorOrderConfirmation = 3;
    Rating buyerRating                        = 4;
    Dispute dispute                           = 5;
    DisputeResolution disputeResolution       = 6;
    Refund refund                             = 7;
    repeated Signatures signatures            = 8;
}

message Listing {
    string slug                             = 1;
    ID vendorID                             = 2;
    Metadata metadata                       = 3;
    Item item                               = 4;
    repeated ShippingOption shippingOptions = 5;
    repeated ShippingRule shippingRules     = 6;
    repeated Tax taxes                      = 7;
    repeated Coupon coupons                 = 8;
    repeated string moderators              = 9;
    string termsAndConditions               = 10;
    string refundPolicy                     = 11;

    // Only used by the API when posting a new listing.
    // Shouldn't be included in the seeded listing.
    // Negative implies no inventory tracking.
    repeated Inventory inventory            = 12;

    message Metadata {
        uint32 version            = 1;
        ContractType contractType = 2;
        ListingType listingType   = 3;
        uint32 expiry             = 4; // unix timestamp
        string customJSON         = 5; // JSON for extensions and plugins

        enum ContractType {
            UNKNOWN       = 0;
            PHYSICAL_GOOD = 1;
            DIGITAL_GOOD  = 2;
            SERVICE       = 3;
            CROWD_FUND    = 4;
        }

        enum ListingType {
            NA           = 0;
            FIXED_PRICE  = 1;
            AUCTION      = 2;
        }
    }

    message Item {
        string title               = 1;
        string description         = 2;
        string processingTime      = 3;
        Price price                = 4;
        bool nsfw                  = 5;
        repeated string tags       = 6;
        repeated Image images      = 7;
        repeated string categories = 8;
        string sku                 = 9;
        float weight               = 10; // kilograms
        string condition           = 11;
        repeated Option options    = 12;

        message Option {
            string name                = 1;
            string description         = 2;
            repeated Variants variants = 3;

            message Variants {
                string name         = 1;
                Image image         = 2;
                Price priceModifier = 3;
            }
        }

        message Image {
            string hash     = 1;
            string fileName = 2;
        }
    }

    message ShippingOption {
        string name                  = 1;
        ShippingType type            = 2;
        repeated CountryCode regions = 3;
        repeated Option options      = 4;

        enum ShippingType {
            LOCAL_PICKUP = 0;
            FIXED_PRICE  = 1;
        }

        message Option {
            string service           = 1;
            Price price              = 2;
            string estimatedDelivery = 3;
        }
    }

    message ShippingRule {
        RuleType ruleType            = 1;
        repeated CountryCode regions = 2;
        uint32 minimumRange          = 3;
        uint32 maxRange              = 4;
        Price price                  = 5;

        enum RuleType {
            QUANTITY_DISCOUNT          = 0;
            FLAT_FEE_QUANTITY_RANGE    = 1;
            FLAT_FEE_WEIGHT_RANGE      = 2;
            COMBINED_SHIPPING_ADD      = 3;
            COMBINED_SHIPPING_SUBTRACT = 4;
        }
    }

    message Tax {
        string taxType                  = 1;
        repeated CountryCode taxRegions = 2;
        bool taxShipping                = 3;
        float percentage                = 4;
    }

    message Coupon {
        string title   = 1;
        string hash    = 2;
        Price discount = 3;
    }

    message Price {
        string currencyCode = 1;
        uint32 amount       = 2; // bitcoins must be in satoshi
    }

    message Inventory {
        // string format is /slug/variant/variant/...
        string item = 1;
        int64 count  = 2;
    }
}

message Order {
    string refundAddress = 1;
    Shipping shipping    = 2;
    ID buyerID           = 3;
    uint64 timestamp     = 4; // unix timestamp
    repeated Item items  = 5;
    Payment payment      = 6;

    message Shipping {
        string shipTo       = 1;
        string address      = 2;
        string city         = 3;
        string state        = 4;
        string postalCode   = 5;
        CountryCode country = 6;
        string addressNotes = 7;
    }

    message Item {
        string listingHash            = 1;
        uint32 quantity               = 2;
        repeated Option options       = 3;
        ShippingOption shippingOption = 4;
        string memo                   = 5;

        message Option {
            string name  = 1;
            string value = 2;
        }

        message ShippingOption {
            string title   = 1;
            string service = 2;
        }
    }

    message Payment {
        Method method       = 1;
        string moderator    = 2;
        uint32 amount       = 3; // satoshis
        string chaincode    = 4; // hex encoded
        string address      = 5; // b58check encoded
        string redeemScript = 6; // hex encoded

        enum Method {
            DIRECT    = 0;
            MODERATED = 1;
        }
    }
}

// TODO: complete other messages
message OrderConfirmation {}
message Rating {}
message Dispute {}
message DisputeResolution {}
message Refund {}

message ID {
    string guid         = 1;
    string blockchainID = 2;
    Pubkeys pubkeys     = 3;

    message Pubkeys {
        bytes guid    = 1;
        bytes bitcoin = 2;
    }
}

message Signatures {
    Section section = 1;
    bytes guid      = 2;
    bytes bitcoin   = 3;

    enum Section {
        NA                 = 0;
        LISTING            = 1;
        ORDER              = 2;
        ORDER_CONFIRMATION = 3;
        RATING             = 4;
        DISPUTE            = 5;
        DISPUTE_RESOLUTION = 6;
        REFUND             = 7;
    }
}
