swagger: '2.0'
schemes:
  - http
  - https
host: localhost:8080
basePath: /
info:
  description: |
    # Introduction
    The OpenBazaar networking daemon combines a Kademlia DHT, IPFS node, Bitcoin wallet, and a peer-to-peer contracting system. This JSON API is the primary mechanism for controlling the node. It offers a RESTful api for building user interfaces as well as a number of RPC calls. In this documentation you'll find a full list of API calls and example usages.

    # Authentication
    When running on localhost (the default), the API is unauthenticated. You can enable authentication by setting the config file as follows:
    ```
     {
        "JSON-API": {
          "Authenticated": true
          }
     }
    ```
    Note that on mainnet the server enables authentication automatically if the gateway url is bound to anything other than localhost (implying open internet access) even if the config file is set to false.

    There are two ways for a client to authenticate. The default (and preferred) is via an authentication cookie. On start up the server generates a random cookie and saves it in the data directory as a .cookie file. You need to add this cookie to the header of all requests. For example:
    ```
    cookie: OpenBazaar_Auth_Cookie=2Yc7VZtG/pVKrH5Lp0mKRSEPC4xlm1dGpkbUXLehTUI
    ```
    Alternatively, you can use basic authentication by setting a username and password in the config file:
    ```
         {
            "JSON-API": {
              "Username": "Aladdin",
              "Password": "OpenSesame"
              }
         }
    ```
    The username and password need to be included in the request header following [RFC 2617](https://www.ietf.org/rfc/rfc2617.txt):
    ```
    Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==
    ```
    Where the username and password are encoded as `base64encode(username + ":" + password)`
    or included in the Url:
    ```
    http://username:password@localhost:8080/ob/
    ```
    # SSL
     **NEVER** open the JSON API to the internet without also encrypting the connection with SSL. Without SSL enabled your authentication information be sent to the server in the clear allowing anyone who views your packets to access your server and potentially steal your bitcoins. For instructions on how to enable SSL, see [here](https://github.com/OpenBazaar/openbazaar-go/blob/master/docs/ssl.md).
    # Cross-Origin Resource Sharing
    CORS is turned off by default, meaning that you will not be able to make API calls from a browser to a running server on localhost. You can turn CORS on for a specific domain by setting an origin in the config file as follows:
     ```
     {
        "JSON-API": {
          "CORS": "https://opeenbazaar.org"
          }
     }
    ```
    Use "*" to allow all domains. Keep in mind that running the server with CORS enabled for all domains is a potential secrity risk as it will allow any website you visit to make calls to your server. Authentication should be enabled along side CORS.

  version: 1.0.0
  title: OpenBazaar JSON API
  termsOfService: There are no TOS at this moment, use at your own risk we take no responsibility.
  contact:
    email: project@openbazaar.org
    url: https://openbazaar.org
  x-logo:
    url: 'https://openbazaar.org/assets/img/icon-large.png'
  license:
    name: MIT
    url: 'http://opensource.org/licenses/MIT'
tags:
  - name: Profile
    description: API calls for setting and viewing profile data
  - name: Images
    description: Image upload API calls
  - name: Settings
    description: API calls for setting mostly UI specific setting variables
  - name: Following
    description: All API calls related to following and getting lists of following/followed peers
  - name: Moderator
    description: API calls for moderation
  - name: Inventory
    description: API calls for managing inventory
  - name: Listings
    description: API calls for listings
  - name: Orders
    description: API calls for ordering
  - name: Peers
    description: RPC calls finding other peers
  - name: Wallet
    description: Bitcoin wallet RPC calls
  - name: IPFS
    description: IPFS gateway API
  - name: Misc
    description: Miscellaneous API calls
securityDefinitions:
  api_key:
    type: apiKey
    name: autoCookie
    in: header
paths:
  /ipfs/{hash}/:
    get:
      tags:
          - IPFS
      summary: Fetch file from IPFS
      description: This API call will query the DHT using the given hash to get a list of peers who are seeding the file. Depending on the size of the file it will then download it from one or more of them.
        The hash may be a directory. In which case this API returns an HTML directory view. To view the files inside the directory, you can add either add their filename or hash to the query. For example...
        ```
        ipfs/QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG/some_image.jpg
        ipfs/QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG/QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr
        ```
        And of course nested directories are also supported, referenced again by a name or hash.
        ```
        ipfs/QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG/my_directory/some_image.jpg
        ipfs/QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG/QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr/some_image.jpg
        ```
      operationId: IPFS
      parameters:
        - name: hash
          in: path
          description: A base58 encoded multihash
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/IPFSResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/IPFSResponse'
  /ipns/{peerId}/:
    get:
      tags:
          - IPFS
      summary: Fetch file from IPNS
      description: The IPNS protocol allows for a user to map their peer ID to an IPFS hash in a cryptographically secure manner. When an IPNS query is made, the server first queries the DHT to resolve the peer ID into an IPFS hash, then proceeds to make an IPFS query given the resolved hash. For example, suppose we have the following mapping..
        ```
        {peerId} = {hash}
        ```
        Then the following API calls are equal...
        ```
        ipfs/{hash}/some_image.jpg
        ipns/{peerId}/some_image.jpg
        ```
      operationId: IPNS
      parameters:
        - name: peerId
          in: path
          description: A base58 encoded multihash peer ID or a blockchain ID.
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/IPFSResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/IPFSResponse'
  /ob/follow:
    post:
      tags:
        - Following
      summary: Follow a peer
      description: RPC call to follow another peer on the network.
      operationId: Follow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Follow object containing a peer ID.
          required: true
          schema:
            $ref: '#/definitions/Follow'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/unfollow:
    post:
      tags:
        - Following
      summary: Unfollow a peer
      description: RPC call to unfollow another peer on the network.
      operationId: Unfollow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Unfollow object containing a peer ID.
          required: true
          schema:
            $ref: '#/definitions/Follow'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/followers:
    get:
      tags:
        - Following
      summary: Get a list of your followers
      description: Returns a list of peers IDs that follow you
      operationId: GetFollowers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: offsetId
          description: Return all peer IDs after this ID
          required: false
          type: string
        - in: query
          name: limit
          description: Number of peer IDs to return
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FollowResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/following:
    get:
      tags:
        - Following
      summary: Get a list of peers you are following.
      description: Returns a list of peer IDs you are following
      operationId: GetFollowing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: offsetId
          description: Return all peer IDs after this ID
          required: false
          type: string
        - in: query
          name: limit
          description: Number of peer IDs to return
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FollowResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/followsme/{peerId}:
    get:
      tags:
        - Following
      summary: Does <peer> follow me?
      description: Returns true if the given peer follows you
      operationId: FollowsMe
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FollowsMeResponse'
  /ob/isfollowing/{peerId}:
    get:
      tags:
        - Following
      summary: Am I following <peer>?
      description: Returns true if you're following the given peer
      operationId: IsFollowing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IsFollowingResponse'
  /ob/profile:
    post:
      tags:
        - Profile
      summary: Set the profile
      description: Set the profile for this node
      operationId: PostProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Profile object
          required: true
          schema:
            $ref: '#/definitions/Profile'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Profile
      summary: Update the profile
      description: Update the profile for this node
      operationId: PutProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Profile object
          required: true
          schema:
            $ref: '#/definitions/Profile'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ipns/{peerId}/profile:
    get:
      tags:
          - Profile
      summary: Get a profile
      description: Get a profile for a node given the peer ID.
      operationId: GetProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID. Use own peer ID to get own profile.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/IPFSResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/IPFSResponse'
  /ob/settings:
    post:
      tags:
        - Settings
      summary: Set settings
      description: Set the settings object in the database
      operationId: PostSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Settings object
          required: true
          schema:
            $ref: '#/definitions/Settings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Settings
      summary: Update settings
      description: Update the settings object in the database. Overwrites all fields.
      operationId: PutSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Settings object
          required: true
          schema:
            $ref: '#/definitions/Settings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - Settings
      summary: Patch settings
      description: Update individual settings without overwriting the rest.
      operationId: PatchSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Settings object with only those fields set which should be updated.
          required: true
          schema:
            $ref: '#/definitions/Settings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Settings
      summary: Get the settings
      description: Fetch the settings from the database
      operationId: GetSettings
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Settings'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wallet/address:
    get:
      tags:
        - Wallet
      summary: Get a bitcoin address
      description: Returns an unused bitcoin address. Note the same address is returned until the address is used.
      operationId: GetBitcoinAddress
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Address'
  /wallet/mnemonic:
    get:
      tags:
        - Wallet
      summary: Get the mnemonic seed
      description: Returns the mnemonic seed used to derive all the bitcoin keys. Note this seed should never be disclosed as it will allow someone to drain your wallet and steal your OpenBazaar identity.
      operationId: GetMnemonic
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Mnemonic'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wallet/balance:
    get:
      tags:
        - Wallet
      summary: Get the wallet's balance
      description: Returns the unconfirmed and confirmed balances of the wallet in satoshi (1/100000000 of a full bitcoin).
      operationId: GetBalance
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Balance'
  /wallet/spend:
    post:
      tags:
        - Wallet
      summary: Send bitcoins
      description: Send bitcoins to someone. Note the feelLevel parameter controls how much of a fee to use. By default the wallet will query a fee api to get the appropriate fee-per-byte for the given level. There is a max fee value in the config file. If the api returns more than the max, then a default fee will be used. The default values, max values, and api can be configured in the config file. If you do not wish to use a fee api, and just want to use the default value, set the fee api to "".
      operationId: SpendBitcoins
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Spend object
          required: true
          schema:
            $ref: '#/definitions/Spend'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wallet/resyncblockchain:
    post:
      tags:
        - Wallet
      summary: Re-sync blockchain
      description: RPC call to re-download the blocks in the blockchain. It is theoretically possible that the wallet could fail to hear of a transaction intended for itself if its peers fail to relay a transaction. In such cases the recourse is to re-download the historical blocks from a new peer to discover the missing transaction(s).
      operationId: ResyncBlockchain
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
  /ob/peers:
    get:
      tags:
        - Peers
      summary: Get connected peers
      description: Returns a list of IDs of the peers connected to this node.
      operationId: GetPeers
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Peers'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/status/{peerId}:
    get:
      tags:
        - Peers
      summary: Get peer online status
      description: Pings the peer and returns if it is online or not
      operationId: PeerStatus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Status'
  /ob/closestpeers/{peerId}:
    get:
      tags:
        - Peers
      summary: Crawl for closest peers
      description: Crawls the DHT and returns up to 20 of the closest peers to the given ID.
      operationId: GetClosestPeers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Peers'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/avatar:
    post:
      tags:
        - Images
      summary: Set the avatar
      description: Set the avatar image. This will also update the avatar hash in the profile.
      operationId: PostAvatar
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Avatar object includes a base64 encoded image
          required: true
          schema:
            $ref: '#/definitions/Avatar'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ImageHashes'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ipns/{peerId}/images/{size}/avatar:
    get:
      tags:
        - Images
      summary: Get avatar
      description: Get the avatar image for a peer. Use own peer ID to get own avatar.
      operationId: GetAvatar
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
        - name: size
          in: path
          description: The image size to set [tiny, small, medium, large, huge]
          required: true
          type: string
      responses:
        '200':
          description: OK
  /ob/header:
    post:
      tags:
        - Images
      summary: Set the header
      description: Set the header image. This will also update the header hash in the profile.
      operationId: PostHeader
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Header object includes a base64 encoded image
          required: true
          schema:
            $ref: '#/definitions/ImageHashes'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ipns/{peerId}/images/{size}/header:
    get:
      tags:
        - Images
      summary: Get header
      description: Get the header image for a peer. Use own peer ID to get own header.
      operationId: GetHeader
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
        - name: size
          in: path
          description: The image size to set [tiny, small, medium, large, huge]
          required: true
          type: string
      responses:
        '200':
          description: OK
  /ob/images:
    post:
      tags:
        - Images
      summary: Upload images
      description: Upload one or more images. Returns the IPFS hash of each image which can be used to fetch the image using the IPFS API call.
      operationId: PostImage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: List of image objects which include a base64 encoded image
          required: true
          schema:
            $ref: '#/definitions/Images'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ImageResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ipns/{peerId}/images/{size}/{filename}:
    get:
      tags:
        - Images
      summary: Get image
      description: Get an image given its filename. Alternatively, you can use /ipfs/{hash}
      operationId: GetImage
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
        - name: size
          in: path
          description: The image size to set [tiny, small, medium, large, huge]
          required: true
          type: string
        - name: filename
          in: path
          description: The filename of the image to fetch
          required: true
          type: string
      responses:
        '200':
          description: OK
  /ob/moderator:
    post:
      tags:
        - Moderator
      summary: Set as moderator
      description: Make this node as a moderator and set the modertor's information.
      operationId: PostModerator
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Moderator object
          required: true
          schema:
            $ref: '#/definitions/Moderator'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Moderator
      summary: Update moderator info
      description: Update the moderation info for this node
      operationId: PutModerator
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Moderator object
          required: true
          schema:
            $ref: '#/definitions/Moderator'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Moderator
      summary: Unset moderator
      description: Unset self as moderator and delete moderation info
      operationId: DeleteModerator
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ipns/{peerId}/moderation:
    get:
      tags:
          - Moderator
      summary: Get moderator info
      description: Fetch moderator info from IPFS
      operationId: GetModerator
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID. Use own peer ID to get own moderation info.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Moderator'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/IPFSResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/IPFSResponse'
  /ob/moderators:
    get:
      tags:
          - Moderator
      summary: Get a list of moderators
      description: Returns a list of moderator peer IDs. Since the server must do a network crawl to find the IDs, there are two ways make this query. The default is a simple long polling GET which returns after the crawl completes. If you want to receive the peer IDs asynchronously, add the async parameter to the request and it will return a random ID which can be used to receive the results over the websocket.
      operationId: GetModerators
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: async
          in: query
          description: Set this query parameter to true to receive the results over websockets.
          required: true
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModeratorList'
        '202':
          description: OK
          schema:
            $ref: '#/definitions/AsyncId'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/IPFSResponse'
  /ob/inventory:
    post:
      tags:
        - Inventory
      summary: Set inventory levels
      description: Set the inventory for a given item. The item format must be /slug/variant/...
      operationId: PostInventory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Inventory object
          required: true
          schema:
            $ref: '#/definitions/Inventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Inventory
      summary: Get all inventory
      description: Get a list of all inventory counts
      operationId: GetInventory
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryList'
  /ob/config:
    get:
      tags:
       - Misc
      summary: Get node configuration
      description: Returns the node's own peer ID and the type of cryptocurrency used.
      operationId: GetConfig
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Config'
  /ob/exchangerate/{currencyCode}:
    get:
      tags:
        - Misc
      summary: Get exchange rates
      description: Returns either the exchange rate (per BTC) for the given fiat currency or all rates.
      operationId: Get
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - name: currencyCode
          in: path
          description: The fiat currency code. This field may be omitted if you want to receive all exchange rates.
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExchangeRate'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/listing:
    post:
      tags:
        - Listings
      summary: Create a new listing
      description: Create a new listing and set its inventory
      operationId: PostListing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Listing request object
          required: true
          schema:
            $ref: '#/definitions/ListingPost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SlugResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Listings
      summary: Update a listing
      description: Update a listing. The currentSlug field is used specify the listing being updated. If the listing contains a new slug, the listing will be renamed using the new slug.
      operationId: PutListing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Listing request object
          required: true
          schema:
            $ref: '#/definitions/ListingPut'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Listings
      summary: Delete a listing
      description: Delete a listing and associated inventory
      operationId: DeleteListing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Current slug object
          required: true
          schema:
            $ref: '#/definitions/ListingDelete'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/listing/{id}:
    get:
      tags:
        - Listings
      summary: Get own listing
      description: Returns this node's own listing with the inventory attached to the return.
      operationId: GetOwnListing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: A slug or listing hash
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListingGet'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ipns/{peerId}/listings/{slug}:
    get:
      tags:
        - Listings
      summary: Get a listing
      description: This returns a listing wrapped in a Ricardian Contract which contains the signatures needed to validate the listing. Alternativley, you can fetch a listing using `/ipfs/{listing_hash}`
      operationId: GetListing
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID. Use your own ID to fetch your own listings.
          required: true
          type: string
        - name: slug
          in: path
          description: The listing slug
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RawListingGet'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/IPFSResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/IPFSResponse'
  /ob/purchase:
    post:
      tags:
        - Orders
      summary: Purchase an item
      description: Send a purchase message to a vendor for one or more items
      operationId: PostPurchase
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Purchase object
          required: true
          schema:
            $ref: '#/definitions/PurchaseData'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PurchaseResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/orderconfirmation:
    post:
      tags:
        - Orders
      summary: Confirm an offline order
      description: Online orders are confirmed instantly. This API call is to confirm an order sent to the vendor while he was offline.
      operationId: PostOrderConfirmation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order confirmation object
          required: true
          schema:
            $ref: '#/definitions/OrderConfirmation'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/orderfulfillment:
    post:
      tags:
        - Orders
      summary: Fulfill an order
      description: Send an order fulfillment message to the buyer. Typically used to tell the buyer an item has been shipped.
      operationId: PostOrderFulfillment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order fulfillment object
          required: true
          schema:
            $ref: '#/definitions/OrderFulfillment'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/ordercompletion:
    post:
      tags:
        - Orders
      summary: Complete an order
      description: Send the order complete message (including the rating) to the vendor. If this is a moderated order, it will sign and release the funds to the vendor.
      operationId: PostOrderCompletion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order completion object
          required: true
          schema:
            $ref: '#/definitions/OrderCompletion'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/ordercancel:
    post:
      tags:
        - Orders
      summary: Cancel an offline order
      description: Cancel an outstanding offline order. It will move the bitcoins back into your wallet.
      operationId: PostCancelConfirmation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order cancel object
          required: true
          schema:
            $ref: '#/definitions/OrderCancel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/refund:
    post:
      tags:
        - Orders
      summary: Refund an order
      description: Refund the order. If it's a moderated order, it will release the funds back to the buyer. If it's direct it will send the coins from your wallet.
      operationId: PostRefund
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Refund object
          required: true
          schema:
            $ref: '#/definitions/Refund'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /ob/order/{orderId}:
    post:
      tags:
        - Orders
      summary: Get an order
      description: Get an order by ID
      operationId: GetOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: orderId
          in: path
          description: The base58 encoded order ID. Can be a sale or purchase.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  DefaultResponse:
    type: object
  ErrorResponse:
    type: object
    example: {
        "success": false,
        "reason": "Error unmarshalling json"
    }
    properties:
      success:
        type: boolean
        example: false
      reason:
        type: string
        example: "Error unmarshalling json"
  IPFSResponse:
    type: string
  SlugResponse:
    description: The slug returned from the post listing call
    example: {"slug": "blue-tshirt"}
    type: object
    properties:
      slug:
        type: string
        example: "blue-tshirt"
  ImageResponse:
    type: array
    example: [
        {
				"tiny": "QmNedYJ6WmLhacAL2ozxb4k33Gxd9wmKB7HyoxZCwXid1e",
				"small": "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
				"medium": "QmbyUYWZEBRFw9uxVThS4FYMwkdhWfGAsYwppBKTF6L968",
				"large": "QmanB2z2s6jig7SXxDtSTdZpnu9fZN9eNVQtqDeUroE5w4",
				"original": "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG",
				"filename": "blue_tshirt.jpg"
			}
    ]
    items:
      type: object
      properties:
        filename:
          description: The name of this file
          type: string
          example: "blue_tshirt.jpg"
        tiny:
          description: The IPFS hash of the file. Base58 encoded multihash.
          type: string
          example: "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr"
        small:
          description: The IPFS hash of the file. Base58 encoded multihash.
          type: string
          example: "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr"
        medium:
          description: The IPFS hash of the file. Base58 encoded multihash.
          type: string
          example: "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr"
        large:
          description: The IPFS hash of the file. Base58 encoded multihash.
          type: string
          example: "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr"
        original:
          description: The IPFS hash of the file. Base58 encoded multihash.
          type: string
          example: "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr"
  Images:
    description: A list of image objects
    type: array
    example: [
        {
          "filename": "blue_tshirt.jpg",
          "image": "/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wgARCAFoAeADASIAAhEBAxEB/8QAHAAAAQUBAQEAAAAAAAAAAAAAAwACBAUGBwEI/8QAGQEAAwEBAQAAAAAAAAAAAAAAAAECAwQF/9oADAMBAAIQAxAAAAHYO8XkdIooaxZ26gT3JCAJQdrWot77LakqjbJjJpDdnR/YymZkyBbWvATfKdPDu66YqYo/d8fHFZLA1ldVSDRZdxsa6xppI7gSoE2R4toohwLUlKSMVrFmSXufn1lxFFJG5Cq5LSan+1g13jJDFzrzXRuzs5aWhBHzsjwOFk+jc8696OXG7mqFiSz6cFrFX+M75o/n3ob97S5doMvOyo1jNx2ZNbE0tMWu5j0nJOpMxqNSxw5I7WixnTOd6HtjA6ul899p551/U4NotRmcjaYt+ogylnIo4L6MxkOh6TW67sXGL3EdQyKht7zZPUrQ8+ZdWUC1xVFCvqbsLSFI1WEUFfFmZRN1XJ+u9eoudX9Fm9GcB/PB+esrpzvXuQ9e78OPWdZZtaywr6PVYHvvzr9FB87/AER8+/QUnz=="
        }
    ]
    items:
      type: object
      required: ["filename", "image"]
      properties:
        filename:
          description: Name of the image file. The same name will be used when saving in the repo.
          type: string
          example: "blue_shirt.jpg"
        image:
          description: A base64 encoded image
          type: string
          example: "/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wgARCAFoAeADASIAAhEBAxEB/8QAHAAAAQUBAQEAAAAAAAAAAAAAAwACBAUGBwEI/8QAGQEAAwEBAQAAAAAAAAAAAAAAAAECAwQF/9oADAMBAAIQAxAAAAHYO8XkdIooaxZ26gT3JCAJQdrWot77LakqjbJjJpDdnR/YymZkyBbWvATfKdPDu66YqYo/d8fHFZLA1ldVSDRZdxsa6xppI7gSoE2R4toohwLUlKSMVrFmSXufn1lxFFJG5Cq5LSan+1g13jJDFzrzXRuzs5aWhBHzsjwOFk+jc8696OXG7mqFiSz6cFrFX+M75o/n3ob97S5doMvOyo1jNx2ZNbE0tMWu5j0nJOpMxqNSxw5I7WixnTOd6HtjA6ul899p551/U4NotRmcjaYt+ogylnIo4L6MxkOh6TW67sXGL3EdQyKht7zZPUrQ8+ZdWUC1xVFCvqbsLSFI1WEUFfFmZRN1XJ+u9eoudX9Fm9GcB/PB+esrpzvXuQ9e78OPWdZZtaywr6PVYHvvzr9FB87/AER8+/QUnz=="
  ExchangeRate:
    type: integer
    example: 620.54
  Status:
    description: A peer status object
    type: object
    required: ["status"]
    properties:
      status:
        description: Whether the peer is online or offline
        enum: ["online", "offline"]
        type: string
        example: "online"
  Follow:
    description: A json object containing a peer ID
    type: object
    required: ["id"]
    properties:
      id:
        description: Base58 encoded multihash
        type: string
        example: "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr"
  FollowResponse:
    description: A json list of Peer IDs
    type: array
    example: [
      "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG",
      "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
      "QmPDLS7TV9Q3gtxRXQVqrm2RpEtz1Mq6u2YGeuEJWCqu6B"
    ]
    items:
      type: string
  FollowsMeResponse:
    type: object
    properties:
      followsMe:
        type: boolean
        example: false
  IsFollowingResponse:
    type: object
    properties:
      isFollowing:
        type: boolean
        example: false
  ImageHashes:
    description: An image hashes object
    type: object
    example: {
				"tiny": "QmNedYJ6WmLhacAL2ozxb4k33Gxd9wmKB7HyoxZCwXid1e",
				"small": "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
				"medium": "QmbyUYWZEBRFw9uxVThS4FYMwkdhWfGAsYwppBKTF6L968",
				"large": "QmanB2z2s6jig7SXxDtSTdZpnu9fZN9eNVQtqDeUroE5w4",
				"original": "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG"
			}
    properties:
      tiny:
        type: string
      small:
        type: string
      medium:
        type: string
      large:
        type: string
      original:
        type: string
  Peers:
    description: A list of peer IDs
    type: array
    example: [
      "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG",
      "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
      "QmPDLS7TV9Q3gtxRXQVqrm2RpEtz1Mq6u2YGeuEJWCqu6B"
    ]
    items:
      type: string
  ModeratorList:
    description: A list of moderators peer IDs
    type: array
    example: [
      "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG",
      "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
      "QmPDLS7TV9Q3gtxRXQVqrm2RpEtz1Mq6u2YGeuEJWCqu6B"
    ]
    items:
      type: string
  AsyncId:
    description: ID object returned for async moderator requests
    type: object
    example: {
        "id": "XQCy9Mx7yAhxbxJRiVAknR"
    }
    properties:
      id:
        description: A random ID
        type: string
  Address:
    description: Bitcoin address object
    type: object
    properties:
      address:
        description: An unused bitcoin address
        type: string
        example: "1HYhu8e2wv19LZ2umXoo1pMiwzy2rL32UQ"
  Mnemonic:
    description: Mnemonic seed object
    type: object
    properties:
      mnemonic:
        description: A twelve-word mnemonic seed
        type: string
        example: "spot piano symbol news risk zero maze exchange repeat matrix whisper learn"
  Avatar:
    description: Avatar image object
    type: object
    properties:
      avatar:
        description: A base64 encoded image
        type: string
        example: "/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wgARCAFoAeADASIAAhEBAxEB/8QAHAAAAQUBAQEAAAAAAAAAAAAAAwACBAUGBwEI/8QAGQEAAwEBAQAAAAAAAAAAAAAAAAECAwQF/9oADAMBAAIQAxAAAAHYO8XkdIooaxZ26gT3JCAJQdrWot77LakqjbJjJpDdnR/YymZkyBbWvATfKdPDu66YqYo/d8fHFZLA1ldVSDRZdxsa6xppI7gSoE2R4toohwLUlKSMVrFmSXufn1lxFFJG5Cq5LSan+1g13jJDFzrzXRuzs5aWhBHzsjwOFk+jc8696OXG7mqFiSz6cFrFX+M75o/n3ob97S5doMvOyo1jNx2ZNbE0tMWu5j0nJOpMxqNSxw5I7WixnTOd6HtjA6ul899p551/U4NotRmcjaYt+ogylnIo4L6MxkOh6TW67sXGL3EdQyKht7zZPUrQ8+ZdWUC1xVFCvqbsLSFI1WEUFfFmZRN1XJ+u9eoudX9Fm9GcB/PB+esrpzvXuQ9e78OPWdZZtaywr6PVYHvvzr9FB87/AER8+/QUnz=="
  Header:
    description: Header image object
    type: object
    properties:
      header:
        description: A base64 encoded image
        type: string
        example: "/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wgARCAFoAeADASIAAhEBAxEB/8QAHAAAAQUBAQEAAAAAAAAAAAAAAwACBAUGBwEI/8QAGQEAAwEBAQAAAAAAAAAAAAAAAAECAwQF/9oADAMBAAIQAxAAAAHYO8XkdIooaxZ26gT3JCAJQdrWot77LakqjbJjJpDdnR/YymZkyBbWvATfKdPDu66YqYo/d8fHFZLA1ldVSDRZdxsa6xppI7gSoE2R4toohwLUlKSMVrFmSXufn1lxFFJG5Cq5LSan+1g13jJDFzrzXRuzs5aWhBHzsjwOFk+jc8696OXG7mqFiSz6cFrFX+M75o/n3ob97S5doMvOyo1jNx2ZNbE0tMWu5j0nJOpMxqNSxw5I7WixnTOd6HtjA6ul899p551/U4NotRmcjaYt+ogylnIo4L6MxkOh6TW67sXGL3EdQyKht7zZPUrQ8+ZdWUC1xVFCvqbsLSFI1WEUFfFmZRN1XJ+u9eoudX9Fm9GcB/PB+esrpzvXuQ9e78OPWdZZtaywr6PVYHvvzr9FB87/AER8+/QUnz=="
  Balance:
    description: Wallet balance object
    type: object
    properties:
      confirmed:
        description: The confirmed balance in satoshi
        type: integer
        example: 25000000
      unconfirmed:
        description: The unconfirmed balance in satoshi
        type: integer
        example: 1700000
  Refund:
    description: A refund object
    type: object
    properties:
      orderId:
        description: The base58 multihash encoded order ID to refund
        type: string
        example: "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr"
  Inventory:
    description: Inventory object
    type: object
    example: {
        "slug": "/cool_tshirt/red/xl",
        "quantity": 17
    }
    required: ["slug", "quantity"]
    properties:
      slug:
        description: A full inventory path containing variants
        type: string
        example: "/cool_tshirt/red/xl"
      quantity:
        description: The amount in stock. Use -1 for unlimited inventory.
        type: integer
        example: 17
  InventoryList:
    description: A list of inventory objects
    type: array
    example: [
        {
           "slug": "/cool_tshirt/red/xl",
           "quantity": 17,
        },
        {
          "slug": "/cool_tshirt/yelow/small",
           "quantity": 9,
        }
    ]
    items:
      $ref: '#/definitions/Inventory'
  OrderFulfillment:
    description: Order fulfillment object
    type: object
    properties:
      slug:
        description: The slug this fulfillment message pertains to
        type: string
        example: "cool_tshirt"
      physicalDelivery:
        description: An object containing the shipping and tracking number. Only use if this is a fulfillment for a physical good. You can use more than one object if the item has multiple tracking numbers.
        type: array
        items:
          type: object
          properties:
            shipper:
              description: The postal carrier for the shipment
              type: string
              example: "UPS"
            trackingNumber:
              description: The tracking number
              type: string
              example: "1Z204E380338943508"
      digitalDelivery:
        description: An object containing a url and password for a digital good. This field is not used for automated delivery. You can use more than one field if necessary.
        type: array
        items:
          type: object
          properties:
            url:
              description: The download url
              type: string
              example: "http://example.com/download.mp3"
            password:
              description: An optional password to access the file
              type: string
              example: "letmein"
  OrderCompletion:
    description: Order completion object
    type: object
    properties:
      orderId:
        description: The base58 encoded multihash order ID
        type: string
        example: "QmPDLS7TV9Q3gtxRXQVqrm2RpEtz1Mq6u2YGeuEJWCqu6B"
      ratings:
        description: An array of rating objects
        type: array
        items:
          type: object
          properties:
            slug:
              description: The slug this rating is for
              type: string
              example: "cool_tshirt"
            overall:
              description: The overall rating
              type: integer
              minimum: 1
              maximum: 5
              example: 3
            quality:
              description: The quality rating
              type: integer
              minimum: 1
              maximum: 5
              example: 4
            description:
              description: The description rating
              type: integer
              minimum: 1
              maximum: 5
              example: 5
            deliverySpeed:
              description: The delivery speed rating
              type: integer
              minimum: 1
              maximum: 5
              example: 5
            customerService:
              description: The customer service rating
              type: integer
              minimum: 1
              maximum: 5
              example: 3
            review:
              description: The buyer's text review
              type: string
              example: "This rocks!"
            anonymous:
              description: Do not include the buyer's ID in the rating
              type: boolean
              example: True
  Config:
    description: Config object
    type: object
    example: {
        "guid": "QmPDLS7TV9Q3gtxRXQVqrm2RpEtz1Mq6u2YGeuEJWCqu6B",
        "cryptoCurrency": "btc"
    }
    properties:
      guid:
        description: The node's own peer ID
        type: string
        example: "QmPDLS7TV9Q3gtxRXQVqrm2RpEtz1Mq6u2YGeuEJWCqu6B"
      cryptoCurrency:
        description: The type of cryptocurrency implemented by this node
        type: string
        example: "btc"
  Spend:
    description: Wallet spend object
    type: object
    required: ["address", "amount", "feeLevel"]
    properties:
      address:
        description: A base58check encoded bitcoin address to send coins to
        type: string
        example: "1HYhu8e2wv19LZ2umXoo1pMiwzy2rL32UQ"
      amount:
        description: The amount to send in satoshi
        type: integer
        example: 1700000
      feeLevel:
        description: The fee level to use
        enum: [ "PRIORITY", "NORMAL", "ECONOMIC" ]
        type: string
        example: "NORMAL"
  Moderator:
    description: Moderator object
    type: object
    required: ["description", "termsAndConditions", "languages", "fee"]
    example: {
        "description": "Long time OpenBazaar moderator located in Chicago",
        "termsAndConditions": "Will moderate anything and everything",
        "languages": [
          "English",
          "Spanish"
        ],
        "fee": {
            "feeType": "FIXED_PLUS_PERCENTAGE",
            "fixedFee": {
                "currencyCode": "USD",
                "amount": 300
            },
            "percentage": 5.0
        },
        "pubKey": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU="
    }
    properties:
      description:
        description: A description of the type of service offered
        type: string
        example: "Long time OpenBazaar moderator located in Chicago"
      termsAndConditions:
        description: Moderators terms and conditions
        type: string
        example: "Will moderate anything and everything"
      languages:
        description: A list of languages spoken by this moderator
        type: array
        example: ["English", "Spanish"]
        items:
          description: Language
          type: string
          example: "English"
      fee:
        description: The fee charged by the moderator. The fixedFee object is only included in types FIXED FEE and FIXED_PLUS_PERCENTAGE
        type: object
        properties:
          fixedFee:
            description: Represents a fixed fee price. Should only be included with types FIXED FEE and FIXED_PLUS_PERCENTAGE.
            type: object
            properties:
              currencyCode:
                description: The currency used for pricing
                type: string
                example: "USD"
              amount:
                description: The amount. If the currencyCode is bitcoin the amount should be satoshis. If it's fiat currency then the amount should have the decimal place moved two places to the right. For example.. 300 = $3.00
                type: integer
                example: 3000
          percentage:
            description: The fee as a percentage. Only include this if the type is PERCENTAGE.
            type: integer
            example: 10.00
          feeType:
            description: The fee type enum
            type: string
            enum: ["FIXED", "PERCENTAGE", "FIXED_PLUS_PERCENTAGE"]
      pubKey:
        description: the moderator's bitcoin public key in base64. This field is automatically added by the server.
        type: string
        example: "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU="
  Profile:
    description: Profile object
    type: object
    required: ["name"]
    properties:
      handle:
        description: Optional blockchainID. Profile will be rejected if the handle does not validate to this node's peer ID.
        type: string
        example: "@UrbanArt"
      name:
        description: User's name
        type: string
        example: "Urban Art"
      location:
        description: Optional location data for this user
        type: string
        example: "Chicago, Illinois"
      about:
        description: About section text
        type: string
        example: We love spray painting and street art and this is the best way to not get arrested or get any tickets but still be able to paint graffiti. We hope you like it.
      shortDescription:
        description: Short text description used in various parts of the app where the about is otherwise too long
        type: string
        example: Spray paint artwork on canvas; everything is individually painted and handmade.
      website:
        description: Option website url
        type: string
        example: "http://urbanart.com"
      email:
        description: Optional email address
        type: string
        example: "dave@urbanart.com"
      phoneNumber:
        description: Optional phone number
        type: string
        example: "555-8790"
      social:
        description: Optional social media accounts
        type: array
        example: [
              {
                "type": "TWITTER",
                "username": "@UrbanArtStore",
                "proof": "https://twitter.com/UrbanArtStore/status/774773006132391936"
              },
              {
                "type": "FACEBOOK",
                "username": "urbanart"
              }
        ]
        items:
          type: object
          required: ["type", "username"]
          properties:
            type:
              description: The type of social account
              type: string
              example: "TWITTER"
            username:
              description: Account username
              type: string
              example: "@UrbanArtStore"
            proof:
              description: A url link proving ownership of this account. For example, a tweet saying 'My OpenBazaar handle is ...'
              type: string
              example: "https://twitter.com/UrbanArtStore/status/774773006132391936"
      nsfw:
        description: Is this user's page not safe for work?
        type: boolean
      vendor:
        description: Is this user a vendor?
        type: boolean
      moderator:
        description: Is this user a moderator?
        type: boolean
      primaryColor:
        description: Primary RGB profile color in hexadecimal format
        type: string
        example: "#AF854C"
      secondaryColor:
        description: Secondary RGB profile color in hexadecimal format
        type: string
        example: "#E3E3E3"
      textColor:
        description: Text RGB profile color in hexadecimal format
        type: string
        example: "#FFFFFF"
      avatarHashes:
        description: The IPFS hashes for this node's avatar. This field is added automatically by the server.
        type: object
        example: {
    				"tiny": "QmNedYJ6WmLhacAL2ozxb4k33Gxd9wmKB7HyoxZCwXid1e",
    				"small": "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
    				"medium": "QmbyUYWZEBRFw9uxVThS4FYMwkdhWfGAsYwppBKTF6L968",
    				"large": "QmanB2z2s6jig7SXxDtSTdZpnu9fZN9eNVQtqDeUroE5w4",
    				"original": "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG"
    			}
        properties:
          tiny:
            type: string
          small:
            type: string
          medium:
            type: string
          large:
            type: string
          original:
            type: string
      headerHashes:
        description: The IPFS hasesh for this node's header. This field is added automatically by the server.
        type: object
        example: {
    				"tiny": "QmNedYJ6WmLhacAL2ozxb4k33Gxd9wmKB7HyoxZCwXid1e",
    				"small": "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
    				"medium": "QmbyUYWZEBRFw9uxVThS4FYMwkdhWfGAsYwppBKTF6L968",
    				"large": "QmanB2z2s6jig7SXxDtSTdZpnu9fZN9eNVQtqDeUroE5w4",
    				"original": "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG"
    			}
        properties:
          tiny:
            type: string
          small:
            type: string
          medium:
            type: string
          large:
            type: string
          original:
            type: string
      followerCount:
        description: The number of peers following this node. This field is added automatically by the server.
        type: integer
        example: 25
      followingCount:
        description: The number of peers this node is following. This field is added automatically by the server.
        type: integer
        example: 82
      listingCount:
        description: The number of listings this node has for sale. This field is added automatically by the server.
        type: integer
        example: 11
      lastModified:
        description: The time this profile was last modified. This field is added automatically by the server.
        type: string
        example: "2016-12-31T15:59:60-08:00"
  Settings:
    type: object
    properties:
      paymentDataInQR:
        description: Add order metadata into payment QR code. Most wallets typically save the metadata so this is an optional privacy feature.
        type: boolean
      showNotifications:
        description: Show notifications which come over the websocket"
        type: boolean
      showNsfw:
        description: Show not safe for work content
        type: boolean
      shippingAddresses:
        description: List of shipping addresses saved for this user
        type: array
        example: [
              {
               "name": "Seymour Butts",
               "company": "Globex Corporation",
               "addressLineOne": "31 Spooner Street",
               "addressLineTwo": "Apt. 124",
               "city": "Quahog",
               "state": "RI",
               "country": "UNITED_STATES",
               "addressNotes": "Leave package at back door"
              }
          ]
        items:
          description: A shipping address object
          type: object
          properties:
            name:
              description: Name of person to ship to
              type: string
              example: "Seymour Butts"
            company:
              description: Optional company name
              type: string
              example: "Globex Corporation"
            addressLineOne:
              description: Shipping street address
              type: string
              example: "31 Spooner Street"
            addressLineTwo:
              description: Second address line. Sometimes used for apartment numbers.
              type: string
              example: "Apt. 124"
            city:
              description: City to ship to
              type: string
              example: "Quahog"
            state:
              description: State or region ship to
              type: string
              example: "RI"
            country:
              description: Country to ship to. Must be one of the countires listed in [countriescodes.proto](https://github.com/OpenBazaar/openbazaar-go/blob/master/pb/protos/countrycodes.proto).
              type: string
              example: "UNITED_STATES"
            postalCode:
              description: Postal code ship to
              type: string
              example: "00093"
            addressNotes:
              description: "Additional information about the address"
              type: string
              example: "Leave package at back door"
      localCurrency:
        description: The currency to display prices in
        type: string
        example: "USD"
      country:
        description: The location of the user. Used for checking if products ships to them. Must be one of the countires listed in [countriescodes.proto](https://github.com/OpenBazaar/openbazaar-go/blob/master/pb/protos/countrycodes.proto).
        type: string
        example: "UNITED_STATES"
      language:
        description: The languange preference of the user. Used to select the language in the UI.
        type: string
        example: "English"
      termsAndConditions:
        description: The saved terms and conditions. Becomes the default text for each listing that is created.
        type: string
        example: "By purchasing this item you agree to the following..."
      refundPolicy:
        description: The saved refund policy. Becomes the default text for each listing that is created.
        type: string
        example: "All sales are final."
      blockedNodes:
        description: Ids of peers we the user wishes to block
        type: array
        example: [
          "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG",
          "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
          "QmPDLS7TV9Q3gtxRXQVqrm2RpEtz1Mq6u2YGeuEJWCqu6B"
        ]
        items:
          type: string
          description: "The peer ID to block"
      moderators:
        description: Saved list of moderator IDs that will be added to each new listing.
        type: array
        example: [
          "QmNedYJ6WmLhacAL2ozxb4k33Gxd9wmKB7HyoxZCwXid1e",
          "QmQdi7EaJUmuRUtSaCPkijw5cptFfNcX2EPvMyQwR117Y2"
        ]
        items:
          type: string
          description: "The moderator peer ID"
      smtpSettings:
        description: Settings for email notifications
        type: object
        example: {
            "notifications": true,
            "serverAddress": "smtp.urbanart.com:465",
            "username": "urbanart",
            "password": "letmein",
            "senderEmail": "notifications@urbanart.com",
            "recipientEmail": "Dave@gmail.com"
        }
        properties:
          notifications:
            description: Turn email notifications on and off
            type: boolean
          serverAddress:
            description: The outgoing mail server IP address or hostname and port
            type: string
            example: "smtp.urbanart.com:465"
          username:
            description: SMTP username
            type: string
            example: "urbanart"
          password:
            description: SMTP password
            type: string
            example: "letmein"
          senderEmail:
            description: The outgoing email address
            type: string
            example: "notifications@urbanart.com"
          recipientEmail:
            description: The email to send the notifications to
            type: string
            example: "Dave@gmail.com"
  ListingPost:
    description: The listing post API call
    type: object
    required: ["listing", "inventory"]
    properties:
      listing:
        $ref: '#/definitions/Listing'
      inventory:
        description: Inventory levels to set with the listing
        type: array
        example: [
        		{
        		    "item": "/ron_swanson_tshirt/Small/Red",
        		    "count": "12"
        		},
        		{
        		    "item": "/ron_swanson_tshirt/Medium/Yellow",
        		    "count": "10"
        		},
        		{
        		    "item": "/ron_swanson_tshirt/Large/Red",
        		    "count": "9"
        		},
        		{
        		    "item": "/ron_swanson_tshirt/XL/Yellow",
        		    "count": "16"
        		}
    	 ]
        items:
          description: An inventory object
          type: object
          required: ["item", "count"]
          properties:
            item:
              description: The listing path including variants
              type: string
            count:
              description: The inventory quantity. Use -1 for infinite quantity.
              type: integer
  ListingPut:
    description: The listing put API call
    type: object
    required: ["listing", "inventory", "currentSlug"]
    properties:
      listing:
        $ref: '#/definitions/Listing'
      inventory:
        description: Inventory levels to set with the listing
        type: array
        example: [
          		{
          		    "item": "/ron_swanson_tshirt/Small/Red",
          		    "count": "12"
          		},
          		{
          		    "item": "/ron_swanson_tshirt/Medium/Yellow",
          		    "count": "10"
          		},
          		{
          		    "item": "/ron_swanson_tshirt/Large/Red",
          		    "count": "9"
          		},
          		{
          		    "item": "/ron_swanson_tshirt/XL/Yellow",
          		    "count": "16"
          		}
      	 ]
        items:
          description: An inventory object
          type: object
          required: ["item", "count"]
          properties:
            item:
              description: The listing path including variants
              type: string
            count:
              description: The inventory quantity. Use -1 for infinite quantity.
              type: integer
      currentSlug:
        description: Used in PUT calls to specify the listing being updated. This slug with be renamed to the slug in the listing if it has changed.
        type: string
        example: "ron_swanson_tshirt"
  ListingDelete:
    description: A delete object
    type: object
    required: ["currentSlug"]
    example: {
      "currentSlug": "ron_swanson_tshirt"
    }
    properties:
      currentSlug:
        description: The slug to delete
        type: string
  RawListingGet:
    description: The response to the listing get
    type: object
    example: {
    "vendorListings": [
        {
            "slug": "ron_swanson_tshirt",
            "vendorID": {
                "guid": "QmbP4QdAWjoYr2AyhNasZD7Ksjfh5mWWontFRTKX7Mq9ci",
                "pubkeys": {
                    "guid": "CAASpgQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDaL9luqCnp7Pz3URXmtKrSY2Ae+AUfUz5plEri6O6TMzTqQlCVoeBHPJ9upRcbjHyA7jKT6ljm6Z7Fv4xbu6B0D20u9D3jT8Gh6+rr4IBQNmW9N2Gu7bm5D/kJ5jxh4TEd5R1a/IPYtXJJW/Uv0U4qpuhHoE6z2shQ6qJb2HzInKK79woT//vOGe6BjlB+ucFtwrqiMr6o3TJv3/sHiJHb2WkU1lpUgtl0fNbSkvwURvDE+V9d+BzlIldngjcbO9tTRbzVUeqiOvdti6ixd+lISMT9a9XQGM1x28pOpawTZI8fajgcHe2kRTNW30Faq3anG2IS5931znhzmls8cIhAbwiIE29PQMBMJSkKzvnQ0/GsocELKvuiq19MVYLZ2PV9xjIGQg0ubgXOL49OFADlRyFVugmwBAbzXHnkVrwXbg6+qxu2ZMZ9sXPjJ2p3zLLwIjx5d2Vnh0DG9d/yNv+VUnfXY53LpxQ3lZ/0qkPITgLUDge8EpbELRTbd3pnXP0L1F1ba3TcMmONG9QT5PXWInhiCvAl9SBBmBFIQ7uigkrUJcvKvAfNoVOaEo4BbLHOOfnmhAkIh2We41WnVHij1uLEoYcdN/6rN6nT/Ycw6QjFpnXIdBTbS+in3Z+vVnsmra2y/H3EBosIAw6Bb1ZojIdr6M90CwmHsijl64pXNwIDAQAB",
                    "bitcoin": "A1SBoi4xK3OxAtKl0t9Npc4TYgukd+dAK/sWfvImojfz"
                }
            },
            "metadata": {
                "version": 1,
                "contractType": "PHYSICAL_GOOD",
                "format": "FIXED_PRICE",
                "expiry": "2017-08-17T04:52:19.000Z",
                "acceptedCurrency": "btc",
                "pricingCurrency": "btc"
            },
            "item": {
                "title": "Ron Swanson Tshirt",
                "description": "Kick ass ron swanson tshirt in yellow",
                "processingTime": "1 to 2 Business days",
                "price": 12000000,
                "tags": [
                    "tshirts",
                    "clothing",
                    "ron swanson"
                ],
                "images": [
                    {
                        "hash": "QmNedYJ6WmLhacAL2ozxb4k33Gxd9wmKB7HyoxZCwXid1e",
                        "filename": "swanson.jpg"
                    }
                ],
                "categories": [
                    "clothing"
                ],
                "sku": "123-456-789",
                "grams": 28,
                "condition": "New",
                "options": [
                    {
                        "name": "Size",
                        "description": "What size do you want your shirt?",
                        "variants": [
                            {
                                "name": "Small"
                            },
                            {
                                "name": "Medium"
                            },
                            {
                                "name": "Large",
                                "priceModifier": 10000
                            },
                            {
                                "name": "XL",
                                "priceModifier": 10000
                            }
                        ]
                    },
                    {
                        "name": "Color",
                        "description": "What color do you want your shirt?",
                        "variants": [
                            {
                                "name": "Red"
                            },
                            {
                                "name": "Yellow"
                            }
                        ]
                    }
                ]
            },
            "shippingOptions": [
                {
                    "name": "Domestic Shipping",
                    "type": "FIXED_PRICE",
                    "regions": [
                        "UNITED_STATES"
                    ],
                    "services": [
                        {
                            "name": "Standard",
                            "price": 6000000,
                            "estimatedDelivery": "4-6 days"
                        },
                        {
                            "name": "Express",
                            "price": 12000000,
                            "estimatedDelivery": "1-3 days"
                        }
                    ]
                },
                {
                    "name": "International Shipping",
                    "type": "FIXED_PRICE",
                    "regions": [
                        "ALL"
                    ],
                    "shippingRules": {
                        "rules": [
                            {
                                "minRange": 5,
                                "maxRange": 10,
                                "price": 10000000
                            },
                            {
                                "minRange": 11,
                                "maxRange": 20,
                                "price": 200000
                            }
                        ]
                    },
                    "services": [
                        {
                            "name": "Standard",
                            "price": 8000000,
                            "estimatedDelivery": "6-8 days"
                        },
                        {
                            "name": "Express",
                            "price": 150000000,
                            "estimatedDelivery": "2-3 days"
                        }
                    ]
                }
            ],
            "taxes": [
                {
                    "taxType": "Sales tax",
                    "taxRegions": [
                        "UNITED_STATES"
                    ],
                    "taxShipping": true,
                    "percentage": 7
                }
            ],
            "coupons": [
                {
                    "title": "10% off",
                    "hash": "QmQdi7EaJUmuRUtSaCPkijw5cptFfNcX2EPvMyQwR117Y2",
                    "percentDiscount": 10
                }
            ],
            "moderators": [
                "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG"
            ],
            "termsAndConditions": "NA",
            "refundPolicy": "No refuns for you. All sales are final."
        }
    ],
    "signatures": [
        {
            "section": "LISTING",
            "guid": "x7hU0U6w6Ldn68qWGZBQz4ERqW9bCctSlOgpYa6CTc48Vxfyt8FbbFyDgO3Q/ambRyhHftaeciqowPJ8RDZ5zpYP3tkuWx0yKBlyIfxBAwg8/+zMlhCeLQNeXjI2ibzzgGxNxDzUclceu0Xqu/rJxOEQhUEplpU0AvPElXhlv3cCwtCzEFj7fp8GPWwQwFgxg1pdj8PLBeWWBqAlGBMaOplhNKYx6rkEDxpvXCC7wr+n3lUvj5xmaru9a7cCVK5Sw3MUCCgdBzvDnZnQuesKSSoZVlalMhVm7MFwGQVEQmf2nI+3a6ZKLiIiE8D9BvqCNP/4r7cZst+PBqKiFEQg8ilUq0l6vcKxH63/FkRrmIj8XS19Ndybqd1VFXTnU32KZTImlReYprgCRWp63wsHCWxAokxKwDGRxbeOA8+B9H+AnfQ6KkoQcxP2MLNS8r/7ZOmmkR1290d6C4X4qE3FSGRWZ+noreyx+mJVEGhGYnTqu6Ox+mLARSbmUjwxq/xeg5KfCDCdToYOhrcHdDZzOF7zasa1XbBm0EXmpJAF16RM2prIpAgfKKkA0t9CcDJ5OdS5dFghHH2CSgeKhbKNgyGcVMgGTdNgNmVilnrWX7+aTZdb434xv4VzVWP/qmsYgSnn5oa2N6BfS/seX+D9OhduR/yyE/VwDRL5shq1zs4=",
            "bitcoin": "MEQCIGROsJe+Z/YcJW+DVbgxo3KCXVIpsN2+HIrohEzvIL6WAiAJfNhggC/kgIrJSoJDK64IZEhDmyTLjUhUGQHCNggSpw=="
        }
    ]
    }
    properties:
      contract:
        description: The listing wrapped in a Ricardian Contract complete with signatures
        type: object
        properties:
          vendorListings:
            description: A list of listings
            type: array
            items:
              description: The listing object
              type: object
              $ref: '#/definitions/Listing'
          signatures:
            description: A list of signature objects
            type: array
            items:
              description: A signature object
              type: object
              properties:
                section:
                  description: The section this signature covers
                  type: string
                  enum: ["LISTING"]
                guid:
                  description: A GUID signature covering the listing in base64
                  type: string
                bitcoin:
                  description: A bitcoin signature covering the listing in base64
                  type: string
  ListingGet:
    description: The response to the listing get
    type: object
    example: {
      "listing": {
    "vendorListings": [
        {
            "slug": "ron_swanson_tshirt",
            "vendorID": {
                "guid": "QmbP4QdAWjoYr2AyhNasZD7Ksjfh5mWWontFRTKX7Mq9ci",
                "pubkeys": {
                    "guid": "CAASpgQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDaL9luqCnp7Pz3URXmtKrSY2Ae+AUfUz5plEri6O6TMzTqQlCVoeBHPJ9upRcbjHyA7jKT6ljm6Z7Fv4xbu6B0D20u9D3jT8Gh6+rr4IBQNmW9N2Gu7bm5D/kJ5jxh4TEd5R1a/IPYtXJJW/Uv0U4qpuhHoE6z2shQ6qJb2HzInKK79woT//vOGe6BjlB+ucFtwrqiMr6o3TJv3/sHiJHb2WkU1lpUgtl0fNbSkvwURvDE+V9d+BzlIldngjcbO9tTRbzVUeqiOvdti6ixd+lISMT9a9XQGM1x28pOpawTZI8fajgcHe2kRTNW30Faq3anG2IS5931znhzmls8cIhAbwiIE29PQMBMJSkKzvnQ0/GsocELKvuiq19MVYLZ2PV9xjIGQg0ubgXOL49OFADlRyFVugmwBAbzXHnkVrwXbg6+qxu2ZMZ9sXPjJ2p3zLLwIjx5d2Vnh0DG9d/yNv+VUnfXY53LpxQ3lZ/0qkPITgLUDge8EpbELRTbd3pnXP0L1F1ba3TcMmONG9QT5PXWInhiCvAl9SBBmBFIQ7uigkrUJcvKvAfNoVOaEo4BbLHOOfnmhAkIh2We41WnVHij1uLEoYcdN/6rN6nT/Ycw6QjFpnXIdBTbS+in3Z+vVnsmra2y/H3EBosIAw6Bb1ZojIdr6M90CwmHsijl64pXNwIDAQAB",
                    "bitcoin": "A1SBoi4xK3OxAtKl0t9Npc4TYgukd+dAK/sWfvImojfz"
                }
            },
            "metadata": {
                "version": 1,
                "contractType": "PHYSICAL_GOOD",
                "format": "FIXED_PRICE",
                "expiry": "2017-08-17T04:52:19.000Z",
                "acceptedCurrency": "btc",
                "pricingCurrency": "btc"
            },
            "item": {
                "title": "Ron Swanson Tshirt",
                "description": "Kick ass ron swanson tshirt in yellow",
                "processingTime": "1 to 2 Business days",
                "price": 12000000,
                "tags": [
                    "tshirts",
                    "clothing",
                    "ron swanson"
                ],
                "images": [
                    {
                        "hash": "QmNedYJ6WmLhacAL2ozxb4k33Gxd9wmKB7HyoxZCwXid1e",
                        "filename": "swanson.jpg"
                    }
                ],
                "categories": [
                    "clothing"
                ],
                "sku": "123-456-789",
                "grams": 28,
                "condition": "New",
                "options": [
                    {
                        "name": "Size",
                        "description": "What size do you want your shirt?",
                        "variants": [
                            {
                                "name": "Small"
                            },
                            {
                                "name": "Medium"
                            },
                            {
                                "name": "Large",
                                "priceModifier": 10000
                            },
                            {
                                "name": "XL",
                                "priceModifier": 10000
                            }
                        ]
                    },
                    {
                        "name": "Color",
                        "description": "What color do you want your shirt?",
                        "variants": [
                            {
                                "name": "Red"
                            },
                            {
                                "name": "Yellow"
                            }
                        ]
                    }
                ]
            },
            "shippingOptions": [
                {
                    "name": "Domestic Shipping",
                    "type": "FIXED_PRICE",
                    "regions": [
                        "UNITED_STATES"
                    ],
                    "services": [
                        {
                            "name": "Standard",
                            "price": 6000000,
                            "estimatedDelivery": "4-6 days"
                        },
                        {
                            "name": "Express",
                            "price": 12000000,
                            "estimatedDelivery": "1-3 days"
                        }
                    ]
                },
                {
                    "name": "International Shipping",
                    "type": "FIXED_PRICE",
                    "regions": [
                        "ALL"
                    ],
                    "shippingRules": {
                        "rules": [
                            {
                                "minRange": 5,
                                "maxRange": 10,
                                "price": 10000000
                            },
                            {
                                "minRange": 11,
                                "maxRange": 20,
                                "price": 200000
                            }
                        ]
                    },
                    "services": [
                        {
                            "name": "Standard",
                            "price": 8000000,
                            "estimatedDelivery": "6-8 days"
                        },
                        {
                            "name": "Express",
                            "price": 150000000,
                            "estimatedDelivery": "2-3 days"
                        }
                    ]
                }
            ],
            "taxes": [
                {
                    "taxType": "Sales tax",
                    "taxRegions": [
                        "UNITED_STATES"
                    ],
                    "taxShipping": true,
                    "percentage": 7
                }
            ],
            "coupons": [
                {
                    "title": "10% off",
                    "hash": "QmQdi7EaJUmuRUtSaCPkijw5cptFfNcX2EPvMyQwR117Y2",
                    "percentDiscount": 10
                }
            ],
            "moderators": [
                "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG"
            ],
            "termsAndConditions": "NA",
            "refundPolicy": "No refuns for you. All sales are final."
        }
    ],
    "signatures": [
        {
            "section": "LISTING",
            "guid": "x7hU0U6w6Ldn68qWGZBQz4ERqW9bCctSlOgpYa6CTc48Vxfyt8FbbFyDgO3Q/ambRyhHftaeciqowPJ8RDZ5zpYP3tkuWx0yKBlyIfxBAwg8/+zMlhCeLQNeXjI2ibzzgGxNxDzUclceu0Xqu/rJxOEQhUEplpU0AvPElXhlv3cCwtCzEFj7fp8GPWwQwFgxg1pdj8PLBeWWBqAlGBMaOplhNKYx6rkEDxpvXCC7wr+n3lUvj5xmaru9a7cCVK5Sw3MUCCgdBzvDnZnQuesKSSoZVlalMhVm7MFwGQVEQmf2nI+3a6ZKLiIiE8D9BvqCNP/4r7cZst+PBqKiFEQg8ilUq0l6vcKxH63/FkRrmIj8XS19Ndybqd1VFXTnU32KZTImlReYprgCRWp63wsHCWxAokxKwDGRxbeOA8+B9H+AnfQ6KkoQcxP2MLNS8r/7ZOmmkR1290d6C4X4qE3FSGRWZ+noreyx+mJVEGhGYnTqu6Ox+mLARSbmUjwxq/xeg5KfCDCdToYOhrcHdDZzOF7zasa1XbBm0EXmpJAF16RM2prIpAgfKKkA0t9CcDJ5OdS5dFghHH2CSgeKhbKNgyGcVMgGTdNgNmVilnrWX7+aTZdb434xv4VzVWP/qmsYgSnn5oa2N6BfS/seX+D9OhduR/yyE/VwDRL5shq1zs4=",
            "bitcoin": "MEQCIGROsJe+Z/YcJW+DVbgxo3KCXVIpsN2+HIrohEzvIL6WAiAJfNhggC/kgIrJSoJDK64IZEhDmyTLjUhUGQHCNggSpw=="
        }
    ]
},
"inventory": [
          		{
          		    "item": "/ron_swanson_tshirt/Small/Red",
          		    "count": "12"
          		},
          		{
          		    "item": "/ron_swanson_tshirt/Medium/Yellow",
          		    "count": "10"
          		},
          		{
          		    "item": "/ron_swanson_tshirt/Large/Red",
          		    "count": "9"
          		},
          		{
          		    "item": "/ron_swanson_tshirt/XL/Yellow",
          		    "count": "16"
          		}
      	]
    }
    properties:
      contract:
        description: The listing wrapped in a Ricardian Contract complete with signatures
        type: object
        properties:
          vendorListings:
            description: A list of listings
            type: array
            items:
              description: The listing object
              type: object
              $ref: '#/definitions/Listing'
          signatures:
            description: A list of signature objects
            type: array
            items:
              description: A signature object
              type: object
              properties:
                section:
                  description: The section this signature covers
                  type: string
                  enum: ["LISTING"]
                guid:
                  description: A GUID signature covering the listing in base64
                  type: string
                bitcoin:
                  description: A bitcoin signature covering the listing in base64
                  type: string
      inventory:
        description: Inventory levels for the listing
        type: array
        example: [
          		{
          		    "item": "/ron_swanson_tshirt/Small/Red",
          		    "count": "12"
          		},
          		{
          		    "item": "/ron_swanson_tshirt/Medium/Yellow",
          		    "count": "10"
          		},
          		{
          		    "item": "/ron_swanson_tshirt/Large/Red",
          		    "count": "9"
          		},
          		{
          		    "item": "/ron_swanson_tshirt/XL/Yellow",
          		    "count": "16"
          		}
      	]
        items:
          description: An inventory object
          type: object
          required: ["item", "count"]
          properties:
            item:
              description: The listing path including variants
              type: string
            count:
              description: The inventory quantity. -1 implies infinite quantity.
              type: integer
  Id:
    description: And ID object for a node
    type: object
    example:  {
                "guid": "QmbP4QdAWjoYr2AyhNasZD7Ksjfh5mWWontFRTKX7Mq9ci",
                "blockchainID": "@urbanart",
                "pubkeys": {
                    "guid": "CAASpgQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDaL9luqCnp7Pz3URXmtKrSY2Ae+AUfUz5plEri6O6TMzTqQlCVoeBHPJ9upRcbjHyA7jKT6ljm6Z7Fv4xbu6B0D20u9D3jT8Gh6+rr4IBQNmW9N2Gu7bm5D/kJ5jxh4TEd5R1a/IPYtXJJW/Uv0U4qpuhHoE6z2shQ6qJb2HzInKK79woT//vOGe6BjlB+ucFtwrqiMr6o3TJv3/sHiJHb2WkU1lpUgtl0fNbSkvwURvDE+V9d+BzlIldngjcbO9tTRbzVUeqiOvdti6ixd+lISMT9a9XQGM1x28pOpawTZI8fajgcHe2kRTNW30Faq3anG2IS5931znhzmls8cIhAbwiIE29PQMBMJSkKzvnQ0/GsocELKvuiq19MVYLZ2PV9xjIGQg0ubgXOL49OFADlRyFVugmwBAbzXHnkVrwXbg6+qxu2ZMZ9sXPjJ2p3zLLwIjx5d2Vnh0DG9d/yNv+VUnfXY53LpxQ3lZ/0qkPITgLUDge8EpbELRTbd3pnXP0L1F1ba3TcMmONG9QT5PXWInhiCvAl9SBBmBFIQ7uigkrUJcvKvAfNoVOaEo4BbLHOOfnmhAkIh2We41WnVHij1uLEoYcdN/6rN6nT/Ycw6QjFpnXIdBTbS+in3Z+vVnsmra2y/H3EBosIAw6Bb1ZojIdr6M90CwmHsijl64pXNwIDAQAB",
                    "bitcoin": "A1SBoi4xK3OxAtKl0t9Npc4TYgukd+dAK/sWfvImojfz"
                }
            }
    required: ["guid", "pubkeys"]
    properties:
      guid:
        description: A node's peer ID as a base58 encoded mutihash
        type: string
      blockchainID:
        description: The node's blockchain ID if it has one
        type: string
      pubkeys:
        description: A pubkey object containing the intentiy and bitcoin public keys
        type: object
        properties:
          guid:
            description: An indentity public key in base64
            type: string
          bitcoin:
            description: A bitcoin master public key in base64 form
            type: string
  Listing:
    description: A listing object that is used by the listing api and the Ricardian Contract
    type: object
    example: {
            "slug": "ron_swanson_tshirt",
            "vendorID": {
                "guid": "QmbP4QdAWjoYr2AyhNasZD7Ksjfh5mWWontFRTKX7Mq9ci",
                "blockchainID": "@urbanart",
                "pubkeys": {
                    "guid": "CAASpgQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDaL9luqCnp7Pz3URXmtKrSY2Ae+AUfUz5plEri6O6TMzTqQlCVoeBHPJ9upRcbjHyA7jKT6ljm6Z7Fv4xbu6B0D20u9D3jT8Gh6+rr4IBQNmW9N2Gu7bm5D/kJ5jxh4TEd5R1a/IPYtXJJW/Uv0U4qpuhHoE6z2shQ6qJb2HzInKK79woT//vOGe6BjlB+ucFtwrqiMr6o3TJv3/sHiJHb2WkU1lpUgtl0fNbSkvwURvDE+V9d+BzlIldngjcbO9tTRbzVUeqiOvdti6ixd+lISMT9a9XQGM1x28pOpawTZI8fajgcHe2kRTNW30Faq3anG2IS5931znhzmls8cIhAbwiIE29PQMBMJSkKzvnQ0/GsocELKvuiq19MVYLZ2PV9xjIGQg0ubgXOL49OFADlRyFVugmwBAbzXHnkVrwXbg6+qxu2ZMZ9sXPjJ2p3zLLwIjx5d2Vnh0DG9d/yNv+VUnfXY53LpxQ3lZ/0qkPITgLUDge8EpbELRTbd3pnXP0L1F1ba3TcMmONG9QT5PXWInhiCvAl9SBBmBFIQ7uigkrUJcvKvAfNoVOaEo4BbLHOOfnmhAkIh2We41WnVHij1uLEoYcdN/6rN6nT/Ycw6QjFpnXIdBTbS+in3Z+vVnsmra2y/H3EBosIAw6Bb1ZojIdr6M90CwmHsijl64pXNwIDAQAB",
                    "bitcoin": "A1SBoi4xK3OxAtKl0t9Npc4TYgukd+dAK/sWfvImojfz"
                }
            },
            "metadata": {
                "version": 1,
                "contractType": "PHYSICAL_GOOD",
                "format": "FIXED_PRICE",
                "expiry": "2017-08-17T04:52:19.000Z",
                "acceptedCurrency": "btc",
                "pricingCurrency": "btc"
            },
            "item": {
                "title": "Ron Swanson Tshirt",
                "description": "Kick ass ron swanson tshirt in yellow",
                "processingTime": "1 to 2 Business days",
                "price": 12000000,
                "tags": [
                    "tshirts",
                    "clothing",
                    "ron swanson"
                ],
                "images": [
                    {
                        "hash": "QmNedYJ6WmLhacAL2ozxb4k33Gxd9wmKB7HyoxZCwXid1e",
                        "filename": "swanson.jpg"
                    }
                ],
                "categories": [
                    "clothing"
                ],
                "sku": "123-456-789",
                "grams": 28,
                "condition": "New",
                "options": [
                    {
                        "name": "Size",
                        "description": "What size do you want your shirt?",
                        "variants": [
                            {
                                "name": "Small"
                            },
                            {
                                "name": "Medium"
                            },
                            {
                                "name": "Large",
                                "priceModifier": 10000
                            },
                            {
                                "name": "XL",
                                "priceModifier": 10000
                            }
                        ]
                    },
                    {
                        "name": "Color",
                        "description": "What color do you want your shirt?",
                        "variants": [
                            {
                                "name": "Red"
                            },
                            {
                                "name": "Yellow"
                            }
                        ]
                    }
                ]
            },
            "shippingOptions": [
                {
                    "name": "Domestic Shipping",
                    "type": "FIXED_PRICE",
                    "regions": [
                        "UNITED_STATES"
                    ],
                    "services": [
                        {
                            "name": "Standard",
                            "price": 6000000,
                            "estimatedDelivery": "4-6 days"
                        },
                        {
                            "name": "Express",
                            "price": 12000000,
                            "estimatedDelivery": "1-3 days"
                        }
                    ]
                },
                {
                    "name": "International Shipping",
                    "type": "FIXED_PRICE",
                    "regions": [
                        "ALL"
                    ],
                    "shippingRules": {
                        "rules": [
                            {
                                "minRange": 5,
                                "maxRange": 10,
                                "price": 10000000
                            },
                            {
                                "minRange": 11,
                                "maxRange": 20,
                                "price": 200000
                            }
                        ]
                    },
                    "services": [
                        {
                            "name": "Standard",
                            "price": 8000000,
                            "estimatedDelivery": "6-8 days"
                        },
                        {
                            "name": "Express",
                            "price": 150000000,
                            "estimatedDelivery": "2-3 days"
                        }
                    ]
                }
            ],
            "taxes": [
                {
                    "taxType": "Sales tax",
                    "taxRegions": [
                        "UNITED_STATES"
                    ],
                    "taxShipping": true,
                    "percentage": 7
                }
            ],
            "coupons": [
                {
                    "title": "10% off",
                    "hash": "QmQdi7EaJUmuRUtSaCPkijw5cptFfNcX2EPvMyQwR117Y2",
                    "percentDiscount": 10
                }
            ],
            "moderators": [
                "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG"
            ],
            "termsAndConditions": "NA",
            "refundPolicy": "No refuns for you. All sales are final."
        }
    required: ["slug", "vendorID", "metadata", "item"]
    properties:
      slug:
        description: A unique identifier for the listing. It will be part of the IPFS url.
        type: string
        maxLength: 70
      vendorID:
        description: The vendor's ID object
        type: object
        $ref: '#/definitions/Id'
      metadata:
        description: Listing metadata object
        type: object
        required: ["contractType", "format", "expiry", "pricingCurrency"]
        properties:
          version:
            description: The version of the listing used. This field is automatically added by the server.
            type: string
          contractType:
            description: An enum for the type of contract this represents
            enum: ["PHSICAL_GOOD", "DIGITAL_GOOD", "SERVICE", "CROWD_FUND"]
            type: string
          format:
            description: An enum for the type of pricing used by the listing
            enum: ["FIXED_PRICE", "AUCTION"]
            type: string
          expiry:
            description: The expiration date for this contract. Formatted as specified in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)
            type: string
            example: "2017-08-17T04:52:19.000Z"
          acceptedCurrency:
            description: The type of crypto currency accepted for this contract. This field is automatically set by the server depending on what type of wallet is implemented.
            type: string
          pricingCurrency:
            description: The contract can by priced in fiat currency to insulate from exchange rate fluctuations. If this is the case this field should be the three character currency code for that currency. Otherwise it should be the same as acceptedCurrency.
            type: string
      item:
        description: Object containing all item details
        type: object
        required: ["title", "price", "nsfw", ]
        properties:
          title:
            description: Listing title
            type: string
            maxLength: 140
          description:
            description: Listing description
            type: string
            maxLength: 50000
          processingTime:
            description: How long will it take to process (get it ready for shipping)
            type: string
            maxLength: 70
          price:
            description: The price of the item in statoshis if bitcoin. If fiat, the decimal place should be shifted two paces to the right.
            type: integer
          nsfw:
            description: Is this listing not safe for work?
            type: boolean
          tags:
            description: Tags are inserted into the DHT and link to your product. DHT search uses these tags to return results.
            type: array
            maximum: 10
            maxLength: 40
            items:
              type: string
          images:
            description: A list of image objects
            type: array
            items:
              description: An image object
              type: object
              required: ["hash", "filename"]
              properties:
                hash:
                  description: The base58 encoded multihash of the image
                  type: string
                filename:
                  description: The name of the file. Allows images to be queried by name in IPFS.
                  type: string
                  maxLength: 70
          categories:
            description: Categories are used by the UI to organize listings within a store
            type: array
            maxLength: 40
            items:
              type: string
          sku:
            description: Optional sku for use by the vendor
            type: string
          grams:
            description: Weight in grams. This is a mandatory field if using shipping rules that use weight.
            type: string
          condition:
            description: The condition of the item
            type: string
          options:
            description: Optional variants for the item. The user will be asked to pick one of each when purchasing the listing.
            type: array
            items:
              description: An options object
              type: object
              required: ["name", "variants"]
              properties:
                name:
                  description: The name of this option
                  type: string
                  maxLength: 40
                  uniqueItems: true
                description:
                  description: A description of this variant
                  type: string
                  maxLength: 70
                variants:
                  description: A list of variants for this option
                  type: array
                  minimum: 2
                  items:
                    description: A variant object
                    type: object
                    required: ["name"]
                    properties:
                      name:
                        description: The name of this option
                        type: string
                        maxLength: 40
                      image:
                        description: An image object
                        type: object
                        required: ["hash", "filename"]
                        properties:
                          hash:
                            description: The base58 encoded multihash of the image
                            type: string
                          filename:
                            description: The name of the file. Allows images to be queried by name in IPFS.
                            type: string
                            maxLength: 70
                      priceModifier:
                        description: Optionally increases or descreases the price of the item
                        type: integer
      shippingOptions:
        description: A list of shipping options
        type: array
        items:
          description: A shipping option object
          type: object
          required: ["name", "shippingType", "regions"]
          properties:
            name:
              description: The name of this option.
              type: string
              maxLength: 40
              uniqueItems: true
            shippingType:
              description: Type of shipping for this option
              enum: ["LOCAL_PICKUP", "FIXED_PRICE"]
              type: string
            regions:
              description: A list of shipping regions. Must use the countires listed in [countriescodes.proto](https://github.com/OpenBazaar/openbazaar-go/blob/master/pb/protos/countrycodes.proto).
              type: array
              minimum: 1
              items:
                type: string
            shippingRules:
              description: Rules which apply when purchasing multiple items
              type: object
              properties:
                ruleType:
                  description: The rule type selection
                  enum: ["QUANTITY_DISCOUNT", "FLAT_FEE_QUANTITY_RANGE", "FLAT_FEE_WEIGHT_RANGE", "COMBINED_SHIPPING_ADD", "COMBINED_SHIPPING_SUBTRACT"]
                  type: string
                rules:
                  description: A list of rules matching the rule type
                  type: object
                  properties:
                    minRange:
                      description: Minimum range for rule
                      type: integer
                    maxRange:
                      description: Maximum range for rule
                      type: integer
                    price:
                      description: The price for this rule
                      type: integer
            services:
              description: A list of service objects
              items:
                description: A service object
                required: ["name", "price", "estimatedDelivery"]
                type: object
                properties:
                  name:
                    description: The name of this service.
                    type: string
                    maxLength: 40
                    uniqueItems: true
                  price:
                    description: The price of this service
                    type: integer
                  estimatedDelivery:
                    description: The estimated delivery for this service option
                    type: string
                    maxLength: 70
      taxes:
        description: A list of taxes to be applied
        type: array
        items:
          description: A tax object
          type: object
          required: ["taxType", "taxRegions", "taxShipping", "percentage"]
          properties:
            taxType:
              description: A name for this tax
              type: string
              maxLength: 40
            taxRegions:
              description: A list of tax regions. Must use the countires listed in [countriescodes.proto](https://github.com/OpenBazaar/openbazaar-go/blob/master/pb/protos/countrycodes.proto).
              type: array
              minimum: 1
              items:
                type: string
            taxShipping:
              description: Should this tax be applied to shipping
              type: boolean
            percentage:
              description: The tax rate
              type: integer
      coupons:
        description: A list of discount coupons
        type: array
        items:
          description: A coupon object
          type: object
          required: ["title", "hash"]
          properties:
            title:
              description: A name for this coupon
              type: string
              maxLength: 70
            hash:
              description: A base58 encoded multihash of the discount code
              type: string
            percentDiscount:
              description: A percentage discount. Only use if price discount is omitted.
              type: integer
            priceDiscount:
              description: A price discount. Only use if percent discount is omitted.
              type: integer
      moderators:
        description: A list of moderators acceptable to the vendor
        type: array
        items:
          description: A base58 encoded multihash moderator ID
          type: string
      termsAndConditions:
        description: Optional terms and conditions for this listing
        type: string
        maxLength: 10000
      refundPolicy:
        description: Optional refund policy
        type: string
        maxLength: 10000
  PurchaseData:
    description: Object containing data for a purchase
    type: object
    example: {
      	"shipTo": "Seymour Butts",
      	"address": "31 Spooner Street",
      	"city": "Quahog",
      	"state": "RI",
      	"postalCode": "00093",
      	"countryCode": "UNITED_STATES",
      	"addressNotes": "Leave on front porch",
      	"moderator": "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
      	"items": [
      		{
      			"listingHash": "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG",
      			"quantity": 1,
      			"options": [
      				{
      					"name": "Color",
      					"value": "Red"
      				},
      				{
      					"name": "Size",
      					"value": "Large"
      				}
      			],
      			"shipping": {
      					"name": "Domestic Shipping",
      					"service": "Standard"
      			},
      			"memo": "thanks!",
      			"coupons": ["discount"]
      		}
              ]
      }
    required: ["items"]
    properties:
      shipTo:
        description: Name of the person to ship to (physical goods only)
        type: string
      address:
        description: Shipping address (physical goods only)
        type: string
      city:
        description: City to ship to (physical goods only)
        type: string
      state:
        description: State to ship to (physical goods only)
        type: string
      postalCode:
        description: Shipping postal code (physical goods only)
        type: string
      countryCode:
        description: Country to ship to (physical goods only). Must be one of the countires listed in [countriescodes.proto](https://github.com/OpenBazaar/openbazaar-go/blob/master/pb/protos/countrycodes.proto).
        type: string
      addressNotes:
        description: Optional notes they buyer can leave for this address
        type: string
      moderator:
        description: The base58 encoded multihash peer ID for the selected moderator if one is chosen
        type: string
      items:
        description: A list of items to puchase from the vendor
        type: array
        items:
          description: An items object
          type: object
          required: ["listingHash", "quantity"]
          properties:
            listingHash:
              description: The base58 encoded multihash of the listing to purchase
              type: string
            quantity:
              description: The quantity to purchase
              type: integer
            options:
              description: The selected options for this item. This field is mandatory if the listing has options listed.
              type: array
              items:
                description: An option object
                type: object
                required: ["name", "value"]
                properties:
                  name:
                    description: The option name
                    type: string
                  value:
                    description: The selected value
                    type: string
            shippingOption:
              description: A shipping option object (physical goods only)
              type: object
              properties:
                name:
                  description: The name of this option
                  type: string
                service:
                  description: The selected service
                  type: string
            memo:
              description: Optional memo to the vendor about this item
              type: string
            coupons:
              description: A list of discount codes to apply to this order (if valid)
              type: array
              items:
                description: A discount code
                type: string
      alternateContactInfo:
        description: An optional additional contact info
        type: string
  PurchaseResponse:
    description: Response to the purchase API call
    type: object
    example: {
        "paymentAddress": "3BDbGsH5h5ctDiFtWMmZawcf3E7iWirVms",
        "amount": 2500000,
        "vendorOnline": true,
        "orderId": "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr"
    }
    properties:
      paymentAddress:
        description: The bitcoin address to send the payment to
        type: string
      amount:
        description: The amount to pay in satoshi
        type: integer
      vendorOnline:
        description: A boolean representing whether the vendor was online or not
        type: boolean
      orderId:
        description: The base58 encoded mutihash order ID
        type: string
  OrderConfirmation:
    description: An order confirmation object
    type: object
    required: ["orderId", "reject"]
    example: {
      "orderId": "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr",
      "reject": false
    }
    properties:
      orderId:
        description: A base58 encoded multihash order ID
        type: string
      reject:
        description: Reject boolean. If true, a reject message will be sent to the buyer.
        type: boolean
  OrderCancel:
    description: An order cancel object
    type: object
    required: ["orderId"]
    example: {
      "orderId": "QmamudHQGtztShX7Nc9HcczehdpGGWpFBWu2JvKWcpELxr"
    }
    properties:
      orderId:
        description: A base58 encoded multihash order ID
        type: string
  OrderResponse:
    description: The response to the orders get
    type: object
    example: {
    "contract": {
        "vendorListings": [
            {
                "slug": "ron_swanson_tshirt",
                "vendorID": {
                    "guid": "QmVp4tK486CvnamB6K4uhY4vB5sMzEDpCNzeyh9VwBFXhS",
                    "blockchainID": "",
                    "pubkeys": {
                        "guid": "CAASpgQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCtwBrbXYzgBUObY+Ai4Y89YniKjKsLpVgKDcqXcQ15H7taX0qnkxdQFkHemiJfgYHfdl/hQsJpn74DkXJ+QTfKysblH8cvdl7wDZFtPSKPHayN+bRorJvg7Nyv+3LEhQYs9ZbnKgv9VqvotjwaDZpnNl4we1VMWMzWjpOaPoY0Gw970mfI4X1vcOVTP2y5mkP/yodOrf6Q5w9bh1SGNqz7G7jXcVbkB/TdmVdxAZw/Zm+aIjuzd/nxxzMzLobMI/eTpIP13mKFjsx9eapj7IUe7M1E+0P8KDKHz7XrrCamUDh33rjcS120jYh0AFJFUa5xZ3SpUpZ6Y+2jfVRpoN+EjVMYlLQ74XRcwco5q9O4ndR5P9o3YmDkpd5WAP1wMYbwsSy+T9ThiWhiyTjpHRVac+FlUYqAI1Sv6L1D1+qsBDV0jbuyDdva1hdiuuYK/QMaqLIwzQ0hQZF0V8lU26HHN4fYXsTahQR7x7wip6K9CrfMIstMFXN9/eOvZGUWq2RyCPosCkn3FEQy0WOQBz0uCHnOYt+IOt34xV9s5LFNAKOjG7J7wXX6Ine7AMs0akvVHdR38Xaa1+0oAIOGwXBoJlqAv+W/o7/pyN/TK8KY+xPNwuwGUPcCpFaOU+TxMvhO39qgHIjxymNbaxp+HBpxL8hRYxAQqV416r7jmjlIwQIDAQAB",
                        "bitcoin": "Atx0O4v2e1auDHHk+Anjp6qeceim8nV00FB3vVwwp7AK"
                    }
                },
                "metadata": {
                    "version": 1,
                    "contractType": "PHYSICAL_GOOD",
                    "format": "FIXED_PRICE",
                    "expiry": "2017-08-17T04:52:19.000Z",
                    "acceptedCurrency": "btc",
                    "pricingCurrency": "btc"
                },
                "item": {
                    "title": "Ron Swanson Tshirt",
                    "description": "Kick ass ron swanson tshirt in yellow",
                    "processingTime": "1 to 2 Business days",
                    "price": 12000000,
                    "nsfw": false,
                    "tags": [
                        "tshirts",
                        "clothing",
                        "ron swanson"
                    ],
                    "images": [
                        {
                            "hash": "QmNedYJ6WmLhacAL2ozxb4k33Gxd9wmKB7HyoxZCwXid1e",
                            "filename": "swanson.jpg"
                        }
                    ],
                    "categories": [
                        "clothing"
                    ],
                    "sku": "123-456-789",
                    "grams": 28,
                    "condition": "New",
                    "options": [
                        {
                            "name": "Size",
                            "description": "What size do you want your shirt?",
                            "variants": [
                                {
                                    "name": "Small",
                                    "priceModifier": 0
                                },
                                {
                                    "name": "Medium",
                                    "priceModifier": 0
                                },
                                {
                                    "name": "Large",
                                    "priceModifier": 10000
                                },
                                {
                                    "name": "XL",
                                    "priceModifier": 10000
                                }
                            ]
                        },
                        {
                            "name": "Color",
                            "description": "What color do you want your shirt?",
                            "variants": [
                                {
                                    "name": "Red",
                                    "priceModifier": 0
                                },
                                {
                                    "name": "Yellow",
                                    "priceModifier": 0
                                }
                            ]
                        }
                    ]
                },
                "shippingOptions": [
                    {
                        "name": "Domestic Shipping",
                        "type": "FIXED_PRICE",
                        "regions": [
                            "UNITED_STATES"
                        ],
                        "services": [
                            {
                                "name": "Standard",
                                "price": 6000000,
                                "estimatedDelivery": "4-6 days"
                            },
                            {
                                "name": "Express",
                                "price": 12000000,
                                "estimatedDelivery": "1-3 days"
                            }
                        ]
                    },
                    {
                        "name": "International Shipping",
                        "type": "FIXED_PRICE",
                        "regions": [
                            "ALL"
                        ],
                        "shippingRules": {
                            "ruleType": "QUANTITY_DISCOUNT",
                            "rules": [
                                {
                                    "minRange": 5,
                                    "maxRange": 10,
                                    "price": 10000000
                                },
                                {
                                    "minRange": 11,
                                    "maxRange": 20,
                                    "price": 200000
                                }
                            ]
                        },
                        "services": [
                            {
                                "name": "Standard",
                                "price": 8000000,
                                "estimatedDelivery": "6-8 days"
                            },
                            {
                                "name": "Express",
                                "price": 150000000,
                                "estimatedDelivery": "2-3 days"
                            }
                        ]
                    }
                ],
                "taxes": [
                    {
                        "taxType": "Sales tax",
                        "taxRegions": [
                            "UNITED_STATES"
                        ],
                        "taxShipping": true,
                        "percentage": 7
                    }
                ],
                "coupons": [
                    {
                        "title": "10% off",
                        "hash": "QmQdi7EaJUmuRUtSaCPkijw5cptFfNcX2EPvMyQwR117Y2",
                        "percentDiscount": 10,
                        "priceDiscount": 0
                    }
                ],
                "moderators": [
                    "QmecpJrN9RJ7smyYByQdZUy5mF6aapgCfKLKRmDtycv9aG"
                ],
                "termsAndConditions": "NA",
                "refundPolicy": "No refuns for you. All sales are final."
            }
        ],
        "buyerOrder": {
            "refundAddress": "mmLqH6LfgWFcNJr3sNsw9gD9QWG1XcPzE8",
            "shipping": {
                "shipTo": "Seymour Butts",
                "address": "31 Spooner Street",
                "city": "Quahog",
                "state": "RI",
                "postalCode": "00093",
                "country": "UNITED_STATES",
                "addressNotes": ""
            },
            "buyerID": {
                "guid": "QmWPBKm3sLEPMy8EqrR5nHD2KUzh3TEgfquRjuxHM4h3Pv",
                "blockchainID": "",
                "pubkeys": {
                    "guid": "CAASpgQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCzxzLJK8BWN45zq4pS4/zOXywD/2COSkKJn3cECB+mc8zwQU7cb3WP9a6IsqLBWySpg6jdkyX/0f7izPUI3E3g2BuFmVZggjKHM0kRCYVQLUsa5ntbjOquQaZJoVV4cLXrYQwtcEDhohfvTn1698vVbPFDBkuu6QXEtNLXsBEshzebORKI/XmnQEYs/M81JSYe0E8My1yKumhln8JnwhDK+YESESaXjGr1PwPJw3pb/PTvQ2JTWe5nWw9ZL9DTlGkM9NYkdJPCdNQjUT4iDvPKuqxsmWRcayYSpeJ5FYplg+WK0B2PgFpGq5AOWnm/DebnVvscN6fqjVd1s6m6OPgnYOOBoyUQ/LkWHjWjIbYct8fHLmY9BZM9L7xcDVmhdYNzpvXgOPwbqUTy0uZqZ13Gq7uORumvVMcNRHN4X12kAvLiaLYqYXDMPw1WcoD/y7dfLckTuDlX+HXkgIE1JyKq1AwbJvdRJ0ItrUHL8zwYrCdPRnTb4LwCEgufl1QGnVfEschqPOPtRmSAKvOvlkFM91nJbMZG0hvRU5udeZywpF8fKYcOe8nmZgI2HwGZSwqqHlmKnDP4K5Ayl/bMNnoDCkNugeg7jOsNEylQzM6h1HgtJ5Cqwe10k+HNtLBfHPzFXJ5J8n7/0Z6tZuO0gKiE+EFfi+JdzKR4mfGP3/7WrwIDAQAB",
                    "bitcoin": "Ap2xPg69EbCmLZupP3jJKmBRM9d59WamiBB6G9UkJ/8m"
                }
            },
            "timestamp": "2016-09-27T20:41:36.000Z",
            "items": [
                {
                    "listingHash": "QmcasKpK3ShAr4uL9Mq3tPy4TyRkSZUzuUF7AuJ6Sj7ije",
                    "quantity": 1,
                    "options": [
                        {
                            "name": "Color",
                            "value": "Red"
                        },
                        {
                            "name": "Size",
                            "value": "Large"
                        }
                    ],
                    "shippingOption": {
                        "name": "Domestic Shipping",
                        "service": "Standard"
                    },
                    "memo": "thanks!",
                    "couponCodes": [
                        "discount"
                    ]
                }
            ],
            "payment": {
                "method": "ADDRESS_REQUEST",
                "moderator": "",
                "amount": 17985630,
                "exchangeRate": 0,
                "chaincode": "",
                "address": "",
                "redeemScript": ""
            },
            "ratingKey": "AmjOlQmR5JnQAYWvj9v1YJq24knjFjLUxHilYaavhxcI",
            "alternateContactInfo": ""
        },
        "vendorOrderConfirmation": {
            "orderID": "QmSqbppyuehdRT9kGjEEcTv17mAYTYC1kddDC1XKULpSnL",
            "paymentAddress": "mqecHvWgXmT55HBd4vke7C8PWUCHgV37p4",
            "requestedAmount": 17985630
        },
        "signatures": [
            {
                "section": "LISTING",
                "guid": "O8Wo1aX9HgvRY+ekI8j1sFOudV9nLhKleqrTeCLjCKQhtx5+u/mDTSvRvLJodUeaJe5VfMu2EuSKQMDwng9J2xNkJ9jZOO63tVRZLSKwS9PxAmWoU1fu2Gg6DxzaL6SAcSH491oBlNSKuSzCbRPGh3vNo1FuJB5rb4bIfw+p+Re2taGbZGxcB0Psq4RhblkDlTkm07CzkbCBMOH1+rCtJmbeP1OtxzbYVQB6agiS3/TKQ7gBIckJNUurMESnphEWKuk2uEdD003tsoFFdyD9ikpw5Om5ubzP6GFjy34ynhz1S+YQQfV+B2YsVPq6KcUle9iZWDuWIF5yFWDcUN7kdqTmEsIDo/gs7iCYZt45IyWyGpkA274LXYgtgs1Q5Bo9sns5UwdFKq70zXUODOWx2zzH+4KJEF9GzoyXys5P/e1LvliaYpWtblNaW/sgwYp10OnxfsIUb92YiXOjNHJ0K23N+MEEsoHMgeX5WG9o3wVRt6t/4znZT31sXRTewpy/ubYQ9yhpMB0VtoNYZg6zxrgiGCmgHMRhY+2cwbCvXo5gMHaqELZFlPVNcL6+HBm4pRIbvmNZi5hEj8ghRuJP3Jl1935EktoYLi7bSdAk2VyC7hR9mFXD1vKATlWoE0b+LFq65UYMBAG8hj4N6rXkANWriNfNNFhqd+BIHZA21Jk=",
                "bitcoin": "MEQCIHhOSsmpICe2Y2zCw5kof0GtvFnM4LOb7QjwIIzWDxCAAiBIZhZ70RxF9Eq+GhjZ0Y8mL1MmJtC8Jh7xp26xhl4a4Q=="
            },
            {
                "section": "ORDER",
                "guid": "lPLlVKJ6V0wC4WkT+z4Fj3N7KhqI0h7J24OvAZdMp+iGt3c1lN2yTZFfuEdtRnjtnSRn2NhQTkbEWpA1YOR6Zv2kshioiNDclVg3NQ/K0iRs1ZkehCMMM7aSK8Pbu89EmFKyMpQdW+J+uJ909rFEhpj1LTmAXlMPIPEnAUjc+2F6DIKuiBB159KqlzBCDNMmgYTyaCKKOx0DXLq90FNy89BriOKk19IWfqgbeT84OuoPqgboqRJifpjftNhUW4J/NRw7KyQaupNkSz9QjMwSG4MEaAx45d+bfVsYfuAkMFbx1f1/tPpy+pxp/42E7d22atUcb6ZeBanuDPwPsNuXZdvLiKq2ZteDDN9yqxzwnFNd+Rrbere83VfQc2NbOgxn8RM2bumSi0ndxmnMqSjmdB/Cbrv3Pc5vkoN0WP2izKv85TfOpgTowW9L7+AfmdI1E+cIDxtjgReDjJfpJQVKMkvgVvBudKBXxKcebWXqJRNcXpsFxs94ZefRLa3hQGKr7xarjezliT78vvhT41bhBiTov3g6+z7qmvXSUq+nNjP390kl5FJPLPMllkeqnXNHg4st2tXhFX6xuEcRE7p3oZPO9hjJKIBU4aLs9pCKg5Z78D+aGyZj1NyW7TJiQZRgdOD7p4lvNg53cT331QeS8KboZZY+ogIFY5YrNv7Zu2o=",
                "bitcoin": "MEQCIHMd5Dhh2hXtg2bpzjLj8vVgjfWVv4htuLO4hbIvOa0zAiB6GiUDL/CfHl7/xaXxuSsJ6bXx/rw0TP2kOrwATcxuoQ=="
            },
            {
                "section": "ORDER_CONFIRMATION",
                "guid": "eyNEvSTqt6GDec2siykC1V9rKNTlvmFbDyncSPSGSW1d7SA10PzpZS/z3Rg1V093wvoZHdFJHxJUVe38IPst2b3VeVtTh+VuuDUvbZtha4k1F9SckZRkOb2GarH/hQdsQLTTiSl9OV6blohy+OjSyPBlEI13GJ6cQkwwXudgal6QPi6xQxc6lVq9g1Zaj95S2sQm4f5mael27orlYudJSRadFk5/n3J6XmwofTHlE9iFXm7+hzhu1V9fPqCEZ065Bn5OCyFeb6KG38+WB2bUSWQH1XgfAVHiU/91aoA5quISvFK7SYbi6W7uhntczQCT5QmnxOzMaFfvpDf5ChkFO6HxW2V9mp4VZHGra9Uq14NeawtRWxT+Q5VFrwbhwBIvoXU6OClEWMq2fGHAZ/39bNL8QiklW5H7YIJZashqjgp6prSHF4LvdGZv63T2zuP/5HFlOqVzk5fGWBxIr3tmmPkM3SVnQGSVS3i5mkPq+LU9wdtp/bFTYOKhd1hrp4G1THWGgXoV+0HPutgqxWPnQmiaoeY+OTSZjb73kBDA4tBrxkFVkYe868pOl+Brt1MrYOL7EhbGQmLg1MWTGUAk0lBXL/67D6qc9e1jwM24p7b7bsZlkEsJHhrjLlPe+8JlDpv50BxftZLx+ikLQBw01ZlFxc5We9HS+szbAF3Qh4c=",
                "bitcoin": "MEUCIQD4EIZsTkZVZTY4qmsJwEN10uq+H6gHQGx42Tgw4TX0OwIgSs0achRVhRvQsao12qhlUsolkePWdlxiRopAY8jreBQ="
            }
        ]
    },
    "state": "FUNDED",
    "read": false,
    "funded": true,
    "transactions": [
        {
            "txid": "36195f28f26699fc04b699d0df2ece312e1c173006bcc99e07baee9dbe291aae",
            "value": 17985630
        }
    ]
}
    properties:
      contract:
        description: The Ricardian Contract in it's current state. The body of this field will contain the appropriate combination of sections from [contracts.proto](https://github.com/OpenBazaar/openbazaar-go/blob/master/pb/protos/contracts.proto)
        type: object
        properties:
          vendorListings:
            description: A list of listings
            type: array
            items:
              description: The listing object
              type: object
              $ref: '#/definitions/Listing'
          signatures:
            description: A list of signature objects
            type: array
            items:
              description: A signature object
              type: object
              properties:
                section:
                  description: The section this signature covers
                  type: string
                  enum: ["LISTING"]
                guid:
                  description: A GUID signature covering the listing in base64
                  type: string
                bitcoin:
                  description: A bitcoin signature covering the listing in base64
                  type: string
      transactionRecord:
        description: A list of bitcoin transactions for this order
        type: array
        example: [
          		{
                "value": 17985630,
                "txid": "36195f28f26699fc04b699d0df2ece312e1c173006bcc99e07baee9dbe291aae"
              }
      	]
        items:
          description: A transaction record
          type: object
          required: ["value", "txid"]
          properties:
            value:
              description: The amount of the transaction
              type: integer
            txid:
              description: The transaction ID in hex
              type: string
      read:
        description: Has this order been view by the user
        type: boolean
      funded:
        description: Has this order been fully funded. Partial funding returns false.
        type: boolean
      state:
        description: The state this order is in
        type: string
        enum: ["PENDING", "CONFIRMED", "FUNDED", "FULFILLED", "COMPLETE", "DISPUTED", "RESOLVED", "REFUNDED", "CANCELED", "REJECTED"]

